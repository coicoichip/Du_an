[{"D:\\code\\Du_an\\frontend\\src\\index.js":"1","D:\\code\\Du_an\\frontend\\src\\App.js":"2","D:\\code\\Du_an\\frontend\\src\\MainRouter.js":"3","D:\\code\\Du_an\\frontend\\src\\theme.js":"4","D:\\code\\Du_an\\frontend\\src\\redux\\index.js":"5","D:\\code\\Du_an\\frontend\\src\\redux\\auth.js":"6","D:\\code\\Du_an\\frontend\\src\\redux\\categories.js":"7","D:\\code\\Du_an\\frontend\\src\\redux\\restaurants.js":"8","D:\\code\\Du_an\\frontend\\src\\redux\\foods.js":"9","D:\\code\\Du_an\\frontend\\src\\redux\\bills.js":"10","D:\\code\\Du_an\\frontend\\src\\redux\\comments.js":"11","D:\\code\\Du_an\\frontend\\src\\redux\\billDetails.js":"12","D:\\code\\Du_an\\frontend\\src\\redux\\cart.js":"13","D:\\code\\Du_an\\frontend\\src\\redux\\socket.js":"14","D:\\code\\Du_an\\frontend\\src\\components\\core\\Menu.js":"15","D:\\code\\Du_an\\frontend\\src\\components\\user\\Signup.js":"16","D:\\code\\Du_an\\frontend\\src\\components\\user\\Users.js":"17","D:\\code\\Du_an\\frontend\\src\\components\\core\\Home.js":"18","D:\\code\\Du_an\\frontend\\src\\components\\user\\EditProfile.js":"19","D:\\code\\Du_an\\frontend\\src\\components\\user\\Profile.js":"20","D:\\code\\Du_an\\frontend\\src\\components\\auth\\Signin.js":"21","D:\\code\\Du_an\\frontend\\src\\components\\user\\StripeConnect.js":"22","D:\\code\\Du_an\\frontend\\src\\components\\auth\\PrivateRoute.js":"23","D:\\code\\Du_an\\frontend\\src\\components\\shop\\NewShop.js":"24","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Shops.js":"25","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Shop.js":"26","D:\\code\\Du_an\\frontend\\src\\components\\shop\\MyShops.js":"27","D:\\code\\Du_an\\frontend\\src\\components\\shop\\EditShop.js":"28","D:\\code\\Du_an\\frontend\\src\\components\\product\\NewProduct.js":"29","D:\\code\\Du_an\\frontend\\src\\components\\product\\EditProduct.js":"30","D:\\code\\Du_an\\frontend\\src\\components\\cart\\Cart.js":"31","D:\\code\\Du_an\\frontend\\src\\components\\order\\Order.js":"32","D:\\code\\Du_an\\frontend\\src\\components\\product\\Product.js":"33","D:\\code\\Du_an\\frontend\\src\\components\\order\\ShopOrders.js":"34","D:\\code\\Du_an\\frontend\\src\\saga\\index.js":"35","D:\\code\\Du_an\\frontend\\src\\redux\\Alert.js":"36","D:\\code\\Du_an\\frontend\\src\\config.js":"37","D:\\code\\Du_an\\frontend\\src\\components\\order\\ProductOrderEdit.js":"38","D:\\code\\Du_an\\frontend\\src\\components\\cart\\AddToCart.js":"39","D:\\code\\Du_an\\frontend\\src\\components\\product\\Suggestions.js":"40","D:\\code\\Du_an\\frontend\\src\\apis\\bills.js":"41","D:\\code\\Du_an\\frontend\\src\\saga\\socket.js":"42","D:\\code\\Du_an\\frontend\\src\\saga\\comments.js":"43","D:\\code\\Du_an\\frontend\\src\\saga\\restaurants.js":"44","D:\\code\\Du_an\\frontend\\src\\saga\\categories.js":"45","D:\\code\\Du_an\\frontend\\src\\saga\\bills.js":"46","D:\\code\\Du_an\\frontend\\src\\saga\\foods.js":"47","D:\\code\\Du_an\\frontend\\src\\saga\\auth.js":"48","D:\\code\\Du_an\\frontend\\src\\components\\cart\\CartItems.js":"49","D:\\code\\Du_an\\frontend\\src\\components\\cart\\Checkout.js":"50","D:\\code\\Du_an\\frontend\\src\\apis\\auth.js":"51","D:\\code\\Du_an\\frontend\\src\\apis\\comments.js":"52","D:\\code\\Du_an\\frontend\\src\\apis\\restaurants.js":"53","D:\\code\\Du_an\\frontend\\src\\apis\\categories.js":"54","D:\\code\\Du_an\\frontend\\src\\apis\\foods.js":"55","D:\\code\\Du_an\\frontend\\src\\components\\cart\\PlaceOrder.js":"56","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Comments.js":"57","D:\\code\\Du_an\\frontend\\src\\components\\product\\MyProducts.js":"58","D:\\code\\Du_an\\frontend\\src\\components\\shop\\DeleteShop.js":"59","D:\\code\\Du_an\\frontend\\src\\components\\product\\Products.js":"60","D:\\code\\Du_an\\frontend\\src\\components\\order\\MyOrders.js":"61","D:\\code\\Du_an\\frontend\\src\\components\\user\\DeleteUser.js":"62","D:\\code\\Du_an\\frontend\\src\\components\\product\\Categories.js":"63","D:\\code\\Du_an\\frontend\\src\\components\\product\\Search.js":"64","D:\\code\\Du_an\\frontend\\src\\components\\product\\DeleteProduct.js":"65","D:\\code\\Du_an\\frontend\\src\\redux\\bells.js":"66","D:\\code\\Du_an\\frontend\\src\\redux\\emitter.js":"67"},{"size":151,"mtime":1608642627953,"results":"68","hashOfConfig":"69"},{"size":620,"mtime":1608642627775,"results":"70","hashOfConfig":"69"},{"size":3006,"mtime":1608645091102,"results":"71","hashOfConfig":"69"},{"size":565,"mtime":1608642627958,"results":"72","hashOfConfig":"69"},{"size":1039,"mtime":1608646883927,"results":"73","hashOfConfig":"69"},{"size":1308,"mtime":1608642627954,"results":"74","hashOfConfig":"69"},{"size":358,"mtime":1608642627955,"results":"75","hashOfConfig":"69"},{"size":1618,"mtime":1608642627956,"results":"76","hashOfConfig":"69"},{"size":1665,"mtime":1608642627955,"results":"77","hashOfConfig":"69"},{"size":1668,"mtime":1608642627954,"results":"78","hashOfConfig":"69"},{"size":1536,"mtime":1608642627955,"results":"79","hashOfConfig":"69"},{"size":549,"mtime":1608642627954,"results":"80","hashOfConfig":"69"},{"size":1739,"mtime":1608642627954,"results":"81","hashOfConfig":"69"},{"size":947,"mtime":1608647905171,"results":"82","hashOfConfig":"69"},{"size":4642,"mtime":1608648133220,"results":"83","hashOfConfig":"69"},{"size":6218,"mtime":1608642627943,"results":"84","hashOfConfig":"69"},{"size":3383,"mtime":1608642627952,"results":"85","hashOfConfig":"69"},{"size":1353,"mtime":1608642627824,"results":"86","hashOfConfig":"69"},{"size":4757,"mtime":1608642627942,"results":"87","hashOfConfig":"69"},{"size":2802,"mtime":1608642682885,"results":"88","hashOfConfig":"69"},{"size":3181,"mtime":1608642627785,"results":"89","hashOfConfig":"69"},{"size":1685,"mtime":1608642627944,"results":"90","hashOfConfig":"69"},{"size":572,"mtime":1608642627784,"results":"91","hashOfConfig":"69"},{"size":5314,"mtime":1608642627927,"results":"92","hashOfConfig":"69"},{"size":4432,"mtime":1608642627934,"results":"93","hashOfConfig":"69"},{"size":6063,"mtime":1608642627933,"results":"94","hashOfConfig":"69"},{"size":4256,"mtime":1608642627923,"results":"95","hashOfConfig":"69"},{"size":6896,"mtime":1608642627918,"results":"96","hashOfConfig":"69"},{"size":4322,"mtime":1608642627876,"results":"97","hashOfConfig":"69"},{"size":4881,"mtime":1608642627858,"results":"98","hashOfConfig":"69"},{"size":913,"mtime":1608642627793,"results":"99","hashOfConfig":"69"},{"size":8148,"mtime":1608642682884,"results":"100","hashOfConfig":"69"},{"size":4237,"mtime":1608642627892,"results":"101","hashOfConfig":"69"},{"size":5730,"mtime":1608642627838,"results":"102","hashOfConfig":"69"},{"size":593,"mtime":1608642627957,"results":"103","hashOfConfig":"69"},{"size":1380,"mtime":1608647729972,"results":"104","hashOfConfig":"69"},{"size":205,"mtime":1608642627953,"results":"105","hashOfConfig":"69"},{"size":4324,"mtime":1608642627835,"results":"106","hashOfConfig":"69"},{"size":1844,"mtime":1608642627792,"results":"107","hashOfConfig":"69"},{"size":4131,"mtime":1608642627894,"results":"108","hashOfConfig":"69"},{"size":1454,"mtime":1608642627782,"results":"109","hashOfConfig":"69"},{"size":560,"mtime":1608642627958,"results":"110","hashOfConfig":"69"},{"size":1769,"mtime":1608642627957,"results":"111","hashOfConfig":"69"},{"size":2071,"mtime":1608642627957,"results":"112","hashOfConfig":"69"},{"size":614,"mtime":1608642627957,"results":"113","hashOfConfig":"69"},{"size":2434,"mtime":1608642627956,"results":"114","hashOfConfig":"69"},{"size":2294,"mtime":1608642627957,"results":"115","hashOfConfig":"69"},{"size":2761,"mtime":1608646360479,"results":"116","hashOfConfig":"69"},{"size":6935,"mtime":1608642627803,"results":"117","hashOfConfig":"69"},{"size":2971,"mtime":1608642627812,"results":"118","hashOfConfig":"69"},{"size":1757,"mtime":1608642627782,"results":"119","hashOfConfig":"69"},{"size":1031,"mtime":1608642627783,"results":"120","hashOfConfig":"69"},{"size":1164,"mtime":1608642627784,"results":"121","hashOfConfig":"69"},{"size":267,"mtime":1608642627782,"results":"122","hashOfConfig":"69"},{"size":1442,"mtime":1608642627783,"results":"123","hashOfConfig":"69"},{"size":2469,"mtime":1608642627824,"results":"124","hashOfConfig":"69"},{"size":3446,"mtime":1608646456106,"results":"125","hashOfConfig":"69"},{"size":4339,"mtime":1608642627865,"results":"126","hashOfConfig":"69"},{"size":1792,"mtime":1608642627912,"results":"127","hashOfConfig":"69"},{"size":3831,"mtime":1608642627893,"results":"128","hashOfConfig":"69"},{"size":2104,"mtime":1608642682884,"results":"129","hashOfConfig":"69"},{"size":1882,"mtime":1608642627935,"results":"130","hashOfConfig":"69"},{"size":2634,"mtime":1608642627847,"results":"131","hashOfConfig":"69"},{"size":2964,"mtime":1608642627893,"results":"132","hashOfConfig":"69"},{"size":1819,"mtime":1608642627848,"results":"133","hashOfConfig":"69"},{"size":197,"mtime":1608647549710,"results":"134","hashOfConfig":"69"},{"size":205,"mtime":1608647814982,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"1jl9czb",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"138"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"138"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"138"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"138"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"138"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"138"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"138"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"138"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"138"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"138"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"138"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"138"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"138"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"138"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"138"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"138"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"138"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"138"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"138"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"138"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"138"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"138"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"138"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\Du_an\\frontend\\src\\index.js",[],["308","309"],"D:\\code\\Du_an\\frontend\\src\\App.js",[],"D:\\code\\Du_an\\frontend\\src\\MainRouter.js",["310","311"],"D:\\code\\Du_an\\frontend\\src\\theme.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\index.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\auth.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\categories.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\restaurants.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\foods.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\bills.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\comments.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\billDetails.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\cart.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\socket.js",["312","313"],"D:\\code\\Du_an\\frontend\\src\\components\\core\\Menu.js",["314","315","316","317","318","319"],"D:\\code\\Du_an\\frontend\\src\\components\\user\\Signup.js",["320","321","322","323"],"import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport { signup } from \"../../redux/auth.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DEFAULT_AVATAR } from \"../../config\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  error: {\r\n    verticalAlign: \"middle\",\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.openTitle,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  submit: {\r\n    margin: \"auto\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  bigAvatar: {\r\n    width: 60,\r\n    height: 60,\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function Signup() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    position: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    open: false,\r\n    error: \"\",\r\n  });\r\n  const logoUrl = values.id\r\n    ? `/api/restaurants/logo/${values.id}?${new Date().getTime()}`\r\n    : DEFAULT_AVATAR;\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  const handleCheck = (event, checked) => {\r\n    setValues({ ...values, position: checked });\r\n  };\r\n\r\n  const clickSubmit = () => {\r\n    const user = {\r\n      name: values.name || undefined,\r\n      email: values.email || undefined,\r\n      password: values.password || undefined,\r\n      position: values.position ? \"owner\" : \"customer\" || undefined,\r\n      phone: values.phone || undefined,\r\n      address: values.address || undefined,\r\n      img_url: values.img_url || undefined,\r\n    };\r\n    dispatch(signup({...user, history}));\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Sign Up\r\n          </Typography>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            className={classes.textField}\r\n            value={values.name}\r\n            onChange={handleChange(\"name\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"img_url\"\r\n            label=\"Image Url\"\r\n            className={classes.textField}\r\n            value={values.img_url}\r\n            onChange={handleChange(\"img_url\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            className={classes.textField}\r\n            value={values.email}\r\n            onChange={handleChange(\"email\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"phone\"\r\n            label=\"Phone\"\r\n            className={classes.textField}\r\n            value={values.phone}\r\n            onChange={handleChange(\"phone\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"address\"\r\n            label=\"Address\"\r\n            className={classes.textField}\r\n            value={values.address}\r\n            onChange={handleChange(\"address\")}\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            className={classes.textField}\r\n            value={values.password}\r\n            onChange={handleChange(\"password\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          {/* <br />\r\n          <Typography variant=\"subtitle1\" className={classes.subheading}>\r\n            Is Restaurant?\r\n          </Typography>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                classes={{\r\n                  checked: classes.checked,\r\n                  bar: classes.bar,\r\n                }}\r\n                checked={values.position}\r\n                onChange={handleCheck}\r\n              />\r\n            }\r\n            label={values.seller ? \"Active\" : \"Inactive\"}\r\n          /> */}\r\n          <br />\r\n          {values.error && (\r\n            <Typography component=\"p\" color=\"error\">\r\n              <Icon color=\"error\" className={classes.error}>\r\n                error\r\n              </Icon>\r\n              {values.error}\r\n            </Typography>\r\n          )}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={clickSubmit}\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      <Dialog open={values.open} disableBackdropClick={true}>\r\n        <DialogTitle>New Account</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            New account successfully created.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Link to=\"/signin\">\r\n            <Button color=\"primary\" autoFocus=\"autoFocus\" variant=\"contained\">\r\n              Sign In\r\n            </Button>\r\n          </Link>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\user\\Users.js",["324"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DeleteUser from \"./DeleteUser\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteUser } from \"../../redux/auth\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: theme.mixins.gutters({\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(5),\r\n  }),\r\n  title: {\r\n    margin: `${theme.spacing(4)}px 0 ${theme.spacing(2)}px`,\r\n    color: theme.palette.openTitle,\r\n  },\r\n}));\r\n\r\nexport default function Users() {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const handleRemove = (user_id) => {\r\n    dispatch(deleteUser({ user_id }));\r\n    setUsers([...users.filter((u) => u.user_id !== user_id)]);\r\n  };\r\n  const handleUpgrade = (email) => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${BASE_URL}/upgrade_user`,\r\n      withCredentials: true,\r\n      data: {\r\n        email,\r\n      },\r\n    }).then(({ data: { data } }) => {\r\n      axios({\r\n        method: \"GET\",\r\n        url: `${BASE_URL}/users`,\r\n        withCredentials: true,\r\n      }).then(({ data: { data } }) => {\r\n        setUsers(data);\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `${BASE_URL}/users`,\r\n      withCredentials: true,\r\n    }).then(({ data: { data } }) => {\r\n      setUsers(data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Paper className={classes.root} elevation={4}>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        All Users\r\n      </Typography>\r\n      <List dense>\r\n        {users.filter(u => u.name !== \"admin\").map((item, i) => {\r\n          return (\r\n            <Link key={i}>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar src={item.img_url} >\r\n                    <Person />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={item.name} />\r\n                <ListItemText primary={item.email} />\r\n                <ListItemText primary={item.position} />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton onClick={() => handleUpgrade(item.email)}>\r\n                    <ArrowUpwardIcon />\r\n                  </IconButton>\r\n                  <IconButton>\r\n                    <DeleteUser onRemove={() => handleRemove(item.user_id)} />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </Link>\r\n          );\r\n        })}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\core\\Home.js",["325","326","327"],"import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Suggestions from './../product/Suggestions'\r\nimport Search from './../product/Search'\r\nimport Categories from './../product/Categories'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFoods } from '../../redux/foods'\r\nimport { getRestaurants } from '../../redux/restaurants'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 30,\r\n  }\r\n}))\r\n\r\n\r\nexport default function Home(){\r\n  const classes = useStyles()\r\n  const [suggestionTitle, setSuggestionTitle] = useState(\"Latest Products\")\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(s => s.categories);\r\n  useEffect(() => {\r\n    dispatch(getFoods());\r\n    dispatch(getRestaurants());\r\n  }, [])\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={8} sm={8}>\r\n            <Search categories={categories}/>\r\n            <Categories categories={categories}/>\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Suggestions products={suggestions} title={suggestionTitle}/>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\code\\Du_an\\frontend\\src\\components\\user\\EditProfile.js",["328","329","330"],"import React, {useState, useEffect} from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Redirect, useHistory} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { editProfile } from '../../redux/auth'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 600,\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    marginTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    color: theme.palette.protectedTitle\r\n  },\r\n  error: {\r\n    verticalAlign: 'middle'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300\r\n  },\r\n  submit: {\r\n    margin: 'auto',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  subheading: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.openTitle\r\n  }\r\n}))\r\n\r\nexport default function EditProfile({ match }) {\r\n  const classes = useStyles()\r\n  const [values, setValues] = useState({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      img_url: '',\r\n      redirectToProfile: false,\r\n      error: ''\r\n  })\r\n  const auth = useSelector(s => s.auth);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const clickSubmit = () => {\r\n    const user = {\r\n      name: values.name || undefined,\r\n      email: values.email || undefined,\r\n      password: values.password || undefined,\r\n      phone: values.phone || undefined,\r\n      address: values.address || undefined,\r\n      img_url: values.img_url || undefined,\r\n    }\r\n    dispatch(editProfile({data: user, history}))\r\n  }\r\n  const handleChange = name => event => {\r\n    setValues({...values, [name]: event.target.value})\r\n  }\r\n  useEffect(() => {\r\n    setValues({\r\n      ...values,\r\n      name: auth.name ,\r\n      email: auth.email ,\r\n      password: \"***\" ,\r\n      phone: auth.phone ,\r\n      address: auth.address ,\r\n      img_url: auth.img_url ,\r\n    })\r\n  },[])\r\n  if (values.redirectToProfile) {\r\n    return (<Redirect to={'/user/' + values.userId}/>)\r\n  }\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Edit Profile\r\n          </Typography>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            className={classes.textField}\r\n            value={values.name}\r\n            onChange={handleChange(\"name\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"img_url\"\r\n            label=\"Image Url\"\r\n            className={classes.textField}\r\n            value={values.img_url}\r\n            onChange={handleChange(\"img_url\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            className={classes.textField}\r\n            value={values.email}\r\n            onChange={handleChange(\"email\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"phone\"\r\n            label=\"Phone\"\r\n            className={classes.textField}\r\n            value={values.phone}\r\n            onChange={handleChange(\"phone\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"address\"\r\n            label=\"Address\"\r\n            className={classes.textField}\r\n            value={values.address}\r\n            onChange={handleChange(\"address\")}\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            className={classes.textField}\r\n            value={values.password}\r\n            onChange={handleChange(\"password\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br /> {\r\n            values.error && (<Typography component=\"p\" color=\"error\">\r\n              <Icon color=\"error\" className={classes.error}>error</Icon>\r\n              {values.error}\r\n            </Typography>)\r\n          }\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={clickSubmit} className={classes.submit}>Submit</Button>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\user\\Profile.js",["331","332","333"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DeleteUser from \"./DeleteUser\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport MyOrders from \"./../order/MyOrders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: theme.mixins.gutters({\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(5),\r\n  }),\r\n  title: {\r\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(2)}px`,\r\n    color: theme.palette.protectedTitle,\r\n  },\r\n  stripe_connect: {\r\n    marginRight: \"10px\",\r\n  },\r\n  stripe_connected: {\r\n    verticalAlign: \"super\",\r\n    marginRight: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function Profile({ match }) {\r\n  const classes = useStyles();\r\n  const [redirectToSignin, setRedirectToSignin] = useState(false);\r\n  const auth = useSelector(s => s.auth)\r\n\r\n  if (redirectToSignin) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return (\r\n    <Paper className={classes.root} elevation={4}>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Profile\r\n      </Typography>\r\n      <List dense>\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar src={auth.img_url}>\r\n              <Person />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={auth?.name} secondary={auth?.email} />{\" \"}\r\n          {auth.email && (\r\n            <ListItemSecondaryAction>\r\n              <Link to={\"/user/edit/\" + auth.user_id}>\r\n                <IconButton aria-label=\"Edit\" color=\"primary\">\r\n                  <Edit />\r\n                </IconButton>\r\n              </Link>\r\n              {/* <DeleteUser userId={auth.user_id} /> */}\r\n            </ListItemSecondaryAction>\r\n          )}\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={\"Joined: \" + moment(auth?.created_at).format('MM/DD/YYYY HH:mm')}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      {auth.position === \"customer\" && <MyOrders />}\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\auth\\Signin.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\user\\StripeConnect.js",["334","335","336"],"import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport queryString from 'query-string'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: theme.mixins.gutters({\r\n    maxWidth: 600,\r\n    margin: 'auto',\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(5)\r\n  }),\r\n  title: {\r\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(2)}px ${theme.spacing(2)}px`,\r\n    color: theme.palette.protectedTitle,\r\n    fontSize: '1.1em'\r\n  },\r\n  subheading: {\r\n    color: theme.palette.openTitle,\r\n    marginLeft: \"24px\"\r\n  }\r\n}))\r\n\r\nexport default function StripeConnect(props){\r\n  const classes = useStyles()\r\n  const [values, setValues] = useState({\r\n    error: false,\r\n    connecting: false,\r\n    connected: false\r\n  })\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root} elevation={4}>\r\n          <Typography type=\"title\" className={classes.title}>\r\n            Connect your Stripe Account\r\n          </Typography>\r\n          {values.error && (<Typography type=\"subheading\" className={classes.subheading}>\r\n              Could not connect your Stripe account. Try again later.\r\n            </Typography>)}\r\n          {values.connecting && (<Typography type=\"subheading\" className={classes.subheading}>\r\n              Connecting your Stripe account ...\r\n            </Typography>)}\r\n          {values.connected && (<Typography type=\"subheading\" className={classes.subheading}>\r\n              Your Stripe account successfully connected!\r\n            </Typography>)}\r\n        </Paper>\r\n      </div>\r\n    )\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\auth\\PrivateRoute.js",["337","338"],"import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, login,...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        login ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\NewShop.js",["339","340"],"import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FileUpload from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createRestaurant } from \"../../redux/restaurants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  error: {\r\n    verticalAlign: \"middle\",\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.openTitle,\r\n    fontSize: \"1em\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  submit: {\r\n    margin: \"auto\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  filename: {\r\n    marginLeft: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function NewShop() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    open_time: \"\",\r\n    close_time: \"\",\r\n    email: \"\",\r\n    img_url: \"\",\r\n    redirect: false,\r\n    error: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"image\" ? event.target.files[0] : event.target.value;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n  const inputProps = {\r\n    step: 60,\r\n  };\r\n  const clickSubmit = () => {\r\n    dispatch(\r\n      createRestaurant({\r\n        data: {\r\n          name: values.name,\r\n          address: values.address,\r\n          phone: values.phone,\r\n          open_time: values.open_time,\r\n          close_time: values.close_time,\r\n          img_url: values.img_url,\r\n          email: values.email,\r\n        },\r\n      })\r\n    );\r\n    setValues({ ...values, redirect: true });\r\n  };\r\n\r\n  if (values.redirect) {\r\n    return <Redirect to={\"/seller/restaurants\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography type=\"headline\" component=\"h2\" className={classes.title}>\r\n            New Shop\r\n          </Typography>\r\n          <br />\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            className={classes.textField}\r\n            value={values.name}\r\n            onChange={handleChange(\"name\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"img_url\"\r\n            label=\"Image Url\"\r\n            className={classes.textField}\r\n            value={values.img_url}\r\n            onChange={handleChange(\"img_url\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"address\"\r\n            label=\"Address\"\r\n            className={classes.textField}\r\n            value={values.address}\r\n            onChange={handleChange(\"address\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"phone\"\r\n            label=\"Phone\"\r\n            className={classes.textField}\r\n            value={values.phone}\r\n            onChange={handleChange(\"phone\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"open_time\"\r\n            label=\"Opent Time\"\r\n            className={classes.textField}\r\n            value={values.open_time}\r\n            onChange={handleChange(\"open_time\")}\r\n            margin=\"normal\"\r\n            type=\"time\"\r\n            inputProps={inputProps}\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"close_time\"\r\n            label=\"Clost Time\"\r\n            className={classes.textField}\r\n            value={values.close_time}\r\n            onChange={handleChange(\"close_time\")}\r\n            margin=\"normal\"\r\n            type=\"time\"\r\n            inputProps={inputProps}\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            className={classes.textField}\r\n            value={values.email}\r\n            onChange={handleChange(\"email\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          {values.error && (\r\n            <Typography component=\"p\" color=\"error\">\r\n              <Icon color=\"error\" className={classes.error}>\r\n                error\r\n              </Icon>\r\n              {values.error}\r\n            </Typography>\r\n          )}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={clickSubmit}\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Link to=\"/seller/restaurants\" className={classes.submit}>\r\n            <Button variant=\"contained\">Cancel</Button>\r\n          </Link>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Shops.js",["341","342","343","344"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRestaurants, resetRestaurants } from \"../../redux/restaurants.js\";\r\nimport { BASE_URL, DEFAULT_AVATAR } from \"../../config.js\";\r\nimport axios from \"axios\";\r\nimport { notifyErrorMsg } from \"../../redux/Alert.js\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport { Grid } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: theme.mixins.gutters({\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(3),\r\n  }),\r\n  title: {\r\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(2)}px`,\r\n    color: theme.palette.protectedTitle,\r\n    textAlign: \"center\",\r\n    fontSize: \"1.2em\",\r\n  },\r\n  avatar: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  subheading: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  shopTitle: {\r\n    fontSize: \"1.2em\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  details: {\r\n    padding: \"24px\",\r\n  },\r\n}));\r\nexport default function Shops() {\r\n  const classes = useStyles();\r\n  const restaurants = useSelector((s) => s.restaurants);\r\n  const [rates, setRates] = useState({});\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getRestaurants());\r\n    return () => {\r\n      dispatch(resetRestaurants());\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    restaurants.forEach((r) => {\r\n      axios({\r\n        method: \"GET\",\r\n        url: `${BASE_URL}/restaurants/${r.id}/rates`,\r\n        withCredentials: true,\r\n      })\r\n        .then(({ data: { data: { avg } } }) =>\r\n          setRates({ ...rates, [r.id]: avg })\r\n        )\r\n        .catch((err) => notifyErrorMsg(err));\r\n    });\r\n  }, [restaurants]);\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root} elevation={4}>\r\n        <Typography type=\"title\" className={classes.title}>\r\n          All Restaurants\r\n        </Typography>\r\n        <List dense>\r\n          {restaurants.map((res, i) => {\r\n            return (\r\n              <Link to={\"/restaurants/\" + res.id} key={i}>\r\n                <Divider />\r\n                <ListItem button>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classes.avatar} src={res?.img_url} />\r\n                  </ListItemAvatar>\r\n                  <div className={classes.details}>\r\n                    <Typography\r\n                      type=\"headline\"\r\n                      component=\"h2\"\r\n                      color=\"primary\"\r\n                      className={classes.shopTitle}\r\n                    >\r\n                      {res.name}\r\n                    </Typography>\r\n                    <Typography\r\n                      type=\"subheading\"\r\n                      component=\"h4\"\r\n                      className={classes.subheading}\r\n                    >\r\n                      {res.address}\r\n                    </Typography>\r\n                  </div>\r\n                  <div\r\n                    className={classes.details}\r\n                    style={{ marginLeft: \"auto\" }}\r\n                  >\r\n                    <Grid container className=\"ml-auto mr-auto\">\r\n                      {[1, 2, 3, 4, 5].map((i) =>\r\n                        i <= rates[res.id] ? (\r\n                          <StarIcon\r\n                            style={{ cursor: \"pointer\", fill: 'black' }}\r\n                          />\r\n                        ) : (\r\n                          <StarBorder\r\n                            style={{ cursor: \"pointer\", fill: 'black' }}\r\n                          />\r\n                        )\r\n                      )}\r\n                    </Grid>\r\n                  </div>\r\n                </ListItem>\r\n                <Divider />\r\n              </Link>\r\n            );\r\n          })}\r\n        </List>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Shop.js",["345","346","347","348","349","350"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Products from \"./../product/Products\";\r\nimport Comments from \"./Comments.js\";\r\nimport { BASE_URL, DEFAULT_AVATAR } from \"../../config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFoods, getFoodsByResId, resetFoods } from \"../../redux/foods.js\";\r\nimport { getRestaurant, resetRestaurants } from \"../../redux/restaurants.js\";\r\nimport { getComments, resetComments } from \"../../redux/comments\";\r\nimport axios from \"axios\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 30,\r\n  },\r\n  card: {\r\n    textAlign: \"center\",\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    color: theme.palette.protectedTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  subheading: {\r\n    marginTop: theme.spacing(1),\r\n    color: theme.palette.openTitle,\r\n  },\r\n  bigAvatar: {\r\n    width: 100,\r\n    height: 100,\r\n    margin: \"auto\",\r\n  },\r\n  productTitle: {\r\n    padding: `${theme.spacing(3)}px ${theme.spacing(2.5)}px ${theme.spacing(\r\n      1\r\n    )}px ${theme.spacing(2)}px`,\r\n    color: theme.palette.openTitle,\r\n    width: \"100%\",\r\n    fontSize: \"1.2em\",\r\n  },\r\n}));\r\n\r\nexport default function Shop({ match }) {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState(\"\");\r\n  const [resStar, setResStar] = useState(0);\r\n  const [showRate, setShowRate] = useState(false);\r\n  const foods = useSelector((s) => s.foods);\r\n  const auth = useSelector((s) => s.auth);\r\n  const restaurants = useSelector((s) => s.restaurants);\r\n  const dispatch = useDispatch();\r\n  const resId = match.params.resId;\r\n  const handleHover = (index) => {\r\n    setResStar(index);\r\n  };\r\n  const vote = () => {\r\n    axios({\r\n      url: `${BASE_URL}/restaurants/${resId}/rates`,\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: {\r\n        star: resStar,\r\n      }\r\n    })\r\n    .then(() => setShowRate(false))\r\n  }\r\n  useEffect(() => {\r\n    dispatch(getFoodsByResId({ resId: resId }));\r\n    dispatch(getRestaurant({ resId: resId }));\r\n    dispatch(getComments({ resId: resId }));\r\n    axios({\r\n      url: `${BASE_URL}/restaurants/${resId}/rates`,\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n    }).then(\r\n      ({\r\n        data: {\r\n          data: { rates, avg },\r\n        },\r\n      }) => {\r\n        setResStar(avg);\r\n        if (!rates.find((r) => r.email === auth.email)) setShowRate(true);\r\n      }\r\n    );\r\n    return () => {\r\n      dispatch(resetFoods());\r\n      dispatch(resetRestaurants());\r\n      dispatch(resetComments());\r\n    };\r\n  }, [resId]);\r\n\r\n  const logoUrl = DEFAULT_AVATAR + resId;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={8}>\r\n        <Grid item xs={4} sm={4}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography\r\n                type=\"headline\"\r\n                component=\"h2\"\r\n                className={classes.title}\r\n              >\r\n                {restaurants[0]?.name}\r\n              </Typography>\r\n              <Avatar\r\n                src={restaurants[0]?.img_url}\r\n                className={classes.bigAvatar}\r\n              />\r\n              <br />\r\n              <Typography\r\n                type=\"subheading\"\r\n                component=\"h2\"\r\n                className={classes.subheading}\r\n              >\r\n                {restaurants[0]?.email}\r\n              </Typography>\r\n              <Typography\r\n                type=\"subheading\"\r\n                component=\"h2\"\r\n                className={classes.subheading}\r\n              >\r\n                {restaurants[0]?.address}\r\n              </Typography>\r\n              <Typography\r\n                type=\"subheading\"\r\n                component=\"h2\"\r\n                className={classes.subheading}\r\n              >\r\n                {restaurants[0]?.open_time} - {restaurants[0]?.close_time}\r\n              </Typography>\r\n              <Typography\r\n                type=\"subheading\"\r\n                component=\"h2\"\r\n                className={classes.subheading}\r\n              >\r\n                {restaurants[0]?.description}\r\n              </Typography>\r\n              {showRate && <Grid container>\r\n                <div className=\"ml-auto mr-auto mt-4\">\r\n                  {[1, 2, 3, 4, 5].map((i) =>\r\n                    i <= resStar ? (\r\n                      <StarIcon\r\n                        onMouseOver={() => handleHover(i)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    ) : (\r\n                      <StarBorder\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onMouseOver={() => handleHover(i)}\r\n                      />\r\n                    )\r\n                  )}\r\n                </div>\r\n              </Grid>}\r\n              {showRate && <div\r\n                className=\"ml-auto mr-auto\"\r\n                style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n                onClick={vote}\r\n              >\r\n                Vote\r\n              </div>}\r\n              <br />\r\n            </CardContent>\r\n          </Card>\r\n          <Comments shopId={resId} updateComments={null} />\r\n        </Grid>\r\n        <Grid item xs={8} sm={8}>\r\n          <Card>\r\n            <Typography\r\n              type=\"title\"\r\n              component=\"h2\"\r\n              className={classes.productTitle}\r\n            >\r\n              Foods\r\n            </Typography>\r\n            <Products foods={foods} searched={false} />\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\MyShops.js",["351","352","353"],"import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport DeleteShop from \"./DeleteShop\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteRestaurant, getRestaurants } from \"../../redux/restaurants\";\r\nimport { DEFAULT_IMAGE } from \"../../config\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: theme.mixins.gutters({\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(5),\r\n  }),\r\n  title: {\r\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(3)}px ${theme.spacing(\r\n      1\r\n    )}px`,\r\n    color: theme.palette.protectedTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  addButton: {\r\n    float: \"right\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: \"8px\",\r\n  },\r\n}));\r\n\r\nexport default function MyShops() {\r\n  const classes = useStyles();\r\n  const auth = useSelector((s) => s.auth);\r\n  const restaurants = useSelector((s) => s.restaurants);\r\n  const [redirectToSignin, setRedirectToSignin] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getRestaurants());\r\n  }, []);\r\n\r\n  const removeShop = (resId) => {\r\n    dispatch(deleteRestaurant({resId}))\r\n  };\r\n\r\n  if (redirectToSignin) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root} elevation={4}>\r\n        <Typography type=\"title\" className={classes.title}>\r\n          Your Restaurants\r\n          <span className={classes.addButton}>\r\n            <Link to=\"/seller/restaurant/new\">\r\n              <Button color=\"primary\" variant=\"contained\">\r\n                <AddBoxIcon className={classes.leftIcon} /> New Restaurant\r\n              </Button>\r\n            </Link>\r\n          </span>\r\n        </Typography>\r\n        <List dense>\r\n          {restaurants.map((restaurant, i) => {\r\n            return (\r\n              <span key={i}>\r\n                <ListItem button>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      src={\r\n                        restaurant?.img_url || DEFAULT_IMAGE + 300\r\n                      }\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={restaurant.name}\r\n                    secondary={restaurant.description}\r\n                  />\r\n                  {auth.position === \"owner\" && (\r\n                    <ListItemSecondaryAction>\r\n                      <Link\r\n                        to={\r\n                          \"/seller/orders/\" +\r\n                          restaurant.name +\r\n                          \"/\" +\r\n                          restaurant.id\r\n                        }\r\n                      >\r\n                        <Button aria-label=\"Orders\" color=\"primary\">\r\n                          View Orders\r\n                        </Button>\r\n                      </Link>\r\n                      <Link to={\"/seller/restaurant/edit/\" + restaurant.id}>\r\n                        <IconButton aria-label=\"Edit\" color=\"primary\">\r\n                          <Edit />\r\n                        </IconButton>\r\n                      </Link>\r\n                      <DeleteShop shop={restaurant} onRemove={() => removeShop(restaurant.id)} />\r\n                    </ListItemSecondaryAction>\r\n                  )}\r\n                </ListItem>\r\n                <Divider />\r\n              </span>\r\n            );\r\n          })}\r\n        </List>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\EditShop.js",["354","355","356","357"],"import React, { useEffect, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Error from \"@material-ui/icons/Error\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FileUpload from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MyProducts from \"./../product/MyProducts\";\r\nimport { DEFAULT_AVATAR } from \"../../config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editRestaurant, getRestaurant, resetRestaurants } from \"../../redux/restaurants\";\r\nconst inputProps = {\r\n  step: 60,\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 30,\r\n  },\r\n  card: {\r\n    textAlign: \"center\",\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    color: theme.palette.protectedTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  subheading: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.openTitle,\r\n  },\r\n  error: {\r\n    verticalAlign: \"middle\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n  submit: {\r\n    margin: \"auto\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  bigAvatar: {\r\n    width: 60,\r\n    height: 60,\r\n    margin: \"auto\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  filename: {\r\n    marginLeft: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function EditShop({ match }) {\r\n  const classes = useStyles();\r\n  const restaurants = useSelector((s) => s.restaurants);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    open_time: \"\",\r\n    close_time: \"\",\r\n    email: \"\",\r\n    redirect: false,\r\n    error: \"\",\r\n    id: \"\",\r\n  });\r\n  const resId = match.params.resId;\r\n\r\n  const clickSubmit = () => {\r\n    dispatch(\r\n      editRestaurant({\r\n        resId,\r\n        data: {\r\n          name: values.name,\r\n          address: values.address,\r\n          phone: values.phone,\r\n          open_time: values.open_time,\r\n          close_time: values.close_time,\r\n          img_url: values.img_url,\r\n          email: values.email,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getRestaurant({ resId }));\r\n    return () => {\r\n      dispatch(resetRestaurants());\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if(restaurants.length) {\r\n      setValues({\r\n        ...values,\r\n        name: restaurants[0].name,\r\n        address: restaurants[0].address,\r\n        phone: restaurants[0].phone,\r\n        open_time: restaurants[0].open_time,\r\n        img_url: restaurants[0].img_url,\r\n        close_time: restaurants[0].close_time,\r\n        email: restaurants[0].email,\r\n      })\r\n    }\r\n  },[restaurants])\r\n  const logoUrl = DEFAULT_AVATAR + resId;\r\n  if (values.redirect) {\r\n    return <Redirect to={\"/seller/restaurants\"} />;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={8}>\r\n        <Grid item xs={6} sm={6}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography\r\n                type=\"headline\"\r\n                component=\"h2\"\r\n                className={classes.title}\r\n              >\r\n                Edit Shop\r\n              </Typography>\r\n              <br />\r\n              <Avatar src={values.img_url} className={classes.bigAvatar} />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                className={classes.textField}\r\n                value={values.name}\r\n                onChange={handleChange(\"name\")}\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              <TextField\r\n                id=\"img_url\"\r\n                label=\"Image Url\"\r\n                className={classes.textField}\r\n                value={values.img_url}\r\n                onChange={handleChange(\"img_url\")}\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              <TextField\r\n                id=\"address\"\r\n                label=\"Address\"\r\n                className={classes.textField}\r\n                value={values.address}\r\n                onChange={handleChange(\"address\")}\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              <TextField\r\n                id=\"phone\"\r\n                label=\"Phone\"\r\n                className={classes.textField}\r\n                value={values.phone}\r\n                onChange={handleChange(\"phone\")}\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              <TextField\r\n                id=\"open_time\"\r\n                label=\"Opent Time\"\r\n                className={classes.textField}\r\n                value={values.open_time}\r\n                onChange={handleChange(\"open_time\")}\r\n                margin=\"normal\"\r\n                type=\"time\"\r\n                inputProps={inputProps}\r\n              />\r\n              <br />\r\n              <TextField\r\n                id=\"close_time\"\r\n                label=\"Clost Time\"\r\n                className={classes.textField}\r\n                value={values.close_time}\r\n                onChange={handleChange(\"close_time\")}\r\n                margin=\"normal\"\r\n                type=\"time\"\r\n                inputProps={inputProps}\r\n              />\r\n              <br />\r\n              <TextField\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                className={classes.textField}\r\n                value={values.email}\r\n                onChange={handleChange(\"email\")}\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              {values.error && (\r\n                <Typography component=\"p\" color=\"error\">\r\n                  <Error color=\"error\" className={classes.error} />\r\n                  {values.error}\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={clickSubmit}\r\n                className={classes.submit}\r\n              >\r\n                Update\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={6} sm={6}>\r\n          <MyProducts shopId={match.params.resId} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\NewProduct.js",["358"],"import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FileUpload from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createFood } from \"../../redux/foods\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  error: {\r\n    verticalAlign: \"middle\",\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.openTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  submit: {\r\n    margin: \"auto\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  filename: {\r\n    marginLeft: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function NewProduct({ match }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    img_url: \"\",\r\n    price: \"\",\r\n    redirect: false,\r\n    error: \"\",\r\n  });\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"image\" ? event.target.files[0] : event.target.value;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n  const clickSubmit = () => {\r\n    dispatch(\r\n      createFood({\r\n        data: {\r\n          name: values.name,\r\n          resId: match.params.resId,\r\n          description: values.description,\r\n          img_url: values.img_url,\r\n          price: values.price,\r\n        },\r\n      })\r\n    );\r\n    setValues({...values, redirect: true})\r\n  };\r\n\r\n  if (values.redirect) {\r\n    return <Redirect to={\"/seller/restaurant/edit/\" + match.params.resId} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography type=\"headline\" component=\"h2\" className={classes.title}>\r\n            New Food\r\n          </Typography>\r\n          <br />\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            className={classes.textField}\r\n            value={values.name}\r\n            onChange={handleChange(\"name\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"price\"\r\n            label=\"Price\"\r\n            className={classes.textField}\r\n            value={values.price}\r\n            onChange={handleChange(\"price\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"img_url\"\r\n            label=\"Image Url\"\r\n            className={classes.textField}\r\n            value={values.img_url}\r\n            onChange={handleChange(\"img_url\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            className={classes.textField}\r\n            value={values.description}\r\n            onChange={handleChange(\"description\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <br />\r\n          {values.error && (\r\n            <Typography component=\"p\" color=\"error\">\r\n              <Icon color=\"error\" className={classes.error}>\r\n                error\r\n              </Icon>\r\n              {values.error}\r\n            </Typography>\r\n          )}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={clickSubmit}\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Link\r\n            to={\"/seller/restaurant/edit/\" + match.params.resId}\r\n            className={classes.submit}\r\n          >\r\n            <Button variant=\"contained\">Cancel</Button>\r\n          </Link>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\EditProduct.js",["359","360","361"],"import React, { useEffect, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { DEFAULT_IMAGE } from \"../../config\";\r\nimport { editFood, getFood, resetFoods } from \"../../redux/foods\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n    maxWidth: 500,\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    color: theme.palette.protectedTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  error: {\r\n    verticalAlign: \"middle\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n  submit: {\r\n    margin: \"auto\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  bigAvatar: {\r\n    width: 60,\r\n    height: 60,\r\n    margin: \"auto\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  filename: {\r\n    marginLeft: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function EditProduct({ match }) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    img_url: \"\",\r\n    price: \"\",\r\n    redirect: false,\r\n    error: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const foods = useSelector((s) => s.foods);\r\n  const clickSubmit = () => {\r\n    dispatch(\r\n      editFood({\r\n        foodId: match.params.foodId,\r\n        resId: match.params.resId,\r\n        data: {\r\n          name: values.name,\r\n          description: values.description,\r\n          img_url: values.img_url,\r\n          price: values.price,\r\n        },\r\n      })\r\n    );\r\n    setValues({ ...values, redirect: true });\r\n  };\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  useEffect(() => {\r\n    dispatch(\r\n      getFood({ foodId: match.params.foodId, resId: match.params.resId })\r\n    );\r\n    return () => {\r\n      dispatch(resetFoods());\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    setValues({\r\n      ...values,\r\n      name: foods[0].name,\r\n      description: foods[0].description,\r\n      img_url: foods[0].img_url,\r\n      price: foods[0].price,\r\n    });\r\n  }, [foods]);\r\n  if (values.redirect) {\r\n    return <Redirect to={\"/seller/restaurant/edit/\" + match.params.resId} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography type=\"headline\" component=\"h2\" className={classes.title}>\r\n            Edit Food\r\n          </Typography>\r\n          <br />\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            className={classes.textField}\r\n            value={values.name}\r\n            onChange={handleChange(\"name\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"price\"\r\n            label=\"Price\"\r\n            className={classes.textField}\r\n            value={values.price}\r\n            onChange={handleChange(\"price\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"img_url\"\r\n            label=\"Image Url\"\r\n            className={classes.textField}\r\n            value={values.img_url}\r\n            onChange={handleChange(\"img_url\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            className={classes.textField}\r\n            value={values.description}\r\n            onChange={handleChange(\"description\")}\r\n            margin=\"normal\"\r\n          />\r\n          <br />\r\n          <br />\r\n          {values.error && (\r\n            <Typography component=\"p\" color=\"error\">\r\n              <Icon color=\"error\" className={classes.error}>\r\n                error\r\n              </Icon>\r\n              {values.error}\r\n            </Typography>\r\n          )}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={clickSubmit}\r\n            className={classes.submit}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Link\r\n            to={\"/seller/restaurant/edit/\" + match.params.resId}\r\n            className={classes.submit}\r\n          >\r\n            <Button variant=\"contained\">Cancel</Button>\r\n          </Link>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\cart\\Cart.js",["362"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CartItems from \"./CartItems\";\r\nimport Checkout from \"./Checkout\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 30,\r\n  },\r\n}));\r\n\r\nexport default function Cart() {\r\n  const classes = useStyles();\r\n  const [checkout, setCheckout] = useState(false);\r\n  const showCheckout = (val) => {\r\n    setCheckout(val);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={8}>\r\n        <Grid item xs={6} sm={6}>\r\n          <CartItems\r\n            checkout={checkout}\r\n            setCheckout={showCheckout}\r\n          />\r\n        </Grid>\r\n        {checkout && (\r\n          <Grid item xs={6} sm={6}>\r\n            <Checkout/>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\order\\Order.js",["363","364","365","366","367","368"],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBills } from \"../../redux/bills\";\r\nimport { getFoodsByResId, resetFoods } from \"../../redux/foods\";\r\nimport { getBill } from \"../../apis/bills\";\r\nimport { resetBillDetails } from \"../../redux/billDetails\";\r\nimport moment from \"moment\";\r\nimport {\r\n  getRestaurant,\r\n  getRestaurants,\r\n  resetRestaurants,\r\n} from \"../../redux/restaurants\";\r\nimport { DEFAULT_IMAGE } from \"../../config\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    textAlign: \"center\",\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(2),\r\n    flexGrow: 1,\r\n    margin: 30,\r\n  },\r\n  cart: {\r\n    textAlign: \"left\",\r\n    width: \"100%\",\r\n    display: \"inline-flex\",\r\n  },\r\n  details: {\r\n    display: \"inline-block\",\r\n    width: \"100%\",\r\n    padding: \"4px\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n    padding: \"16px 8px 0px\",\r\n  },\r\n  cover: {\r\n    width: 160,\r\n    height: 125,\r\n    margin: \"8px\",\r\n  },\r\n  info: {\r\n    color: \"rgba(83, 170, 146, 0.82)\",\r\n    fontSize: \"0.95rem\",\r\n    display: \"inline\",\r\n  },\r\n  thanks: {\r\n    color: \"rgb(136, 183, 107)\",\r\n    fontSize: \"0.9rem\",\r\n    fontStyle: \"italic\",\r\n  },\r\n  innerCardItems: {\r\n    textAlign: \"left\",\r\n    margin: \"24px 10px 24px 24px\",\r\n    padding: \"24px 20px 40px 20px\",\r\n    backgroundColor: \"#80808017\",\r\n  },\r\n  innerCard: {\r\n    textAlign: \"left\",\r\n    margin: \"24px 24px 24px 10px\",\r\n    padding: \"30px 45px 40px 45px\",\r\n    backgroundColor: \"#80808017\",\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n    color: theme.palette.protectedTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  subheading: {\r\n    marginTop: theme.spacing(1),\r\n    color: theme.palette.openTitle,\r\n  },\r\n  productTitle: {\r\n    fontSize: \"1.15em\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  itemTotal: {\r\n    float: \"right\",\r\n    marginRight: \"40px\",\r\n    fontSize: \"1.5em\",\r\n    color: \"rgb(72, 175, 148)\",\r\n  },\r\n  itemShop: {\r\n    display: \"block\",\r\n    fontSize: \"1em\",\r\n    color: \"#78948f\",\r\n  },\r\n  checkout: {\r\n    float: \"right\",\r\n    margin: \"24px\",\r\n  },\r\n  total: {\r\n    fontSize: \"1.2em\",\r\n    color: \"rgb(53, 97, 85)\",\r\n    marginRight: \"16px\",\r\n    fontWeight: \"600\",\r\n    verticalAlign: \"bottom\",\r\n  },\r\n}));\r\n\r\nexport default function Order({ match }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const order = location?.state?.order;\r\n  const foods = useSelector((s) => s.foods);\r\n  const restaurants = useSelector((s) => s.restaurants);\r\n\r\n  useEffect(() => {\r\n    if (!order) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    dispatch(getFoodsByResId({ resId: order.restaurant_id }));\r\n    dispatch(getRestaurants());\r\n    return () => {\r\n      dispatch(resetFoods());\r\n      dispatch(resetRestaurants());\r\n      dispatch(resetBillDetails());\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(getBills({ resId: match.params.resId }));\r\n  }, []);\r\n  if (!order) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Typography type=\"headline\" component=\"h2\" className={classes.title}>\r\n        Order Details\r\n      </Typography>\r\n      <Typography\r\n        type=\"subheading\"\r\n        component=\"h2\"\r\n        className={classes.subheading}\r\n      >\r\n        Order Code: <strong>{order.id}</strong> <br /> Placed on{\" \"}\r\n        {moment(order.created_at).format(\"MM/DD/YYYY HH:mm\")}\r\n      </Typography>\r\n      <br />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={7} sm={7}>\r\n          <Card className={classes.innerCardItems}>\r\n            {order.bill_detail.map((item, i) => {\r\n              return (\r\n                <span key={i}>\r\n                  <Card className={classes.cart}>\r\n                    <CardMedia\r\n                      className={classes.cover}\r\n                      image={\r\n                        foods.find((s) => s.id === item.food_id)?.img_url ||\r\n                        DEFAULT_IMAGE + 200\r\n                      }\r\n                      title={foods.find((s) => s.id === item.food_id)?.name}\r\n                    />\r\n                    <div className={classes.details}>\r\n                      <CardContent className={classes.content}>\r\n                          <Typography\r\n                            type=\"title\"\r\n                            component=\"h3\"\r\n                            className={classes.productTitle}\r\n                            color=\"primary\"\r\n                          >\r\n                            {foods.find((s) => s.id === item.food_id)?.name}\r\n                          </Typography>\r\n                        <Typography\r\n                          type=\"subheading\"\r\n                          component=\"h3\"\r\n                          className={classes.itemShop}\r\n                          color=\"primary\"\r\n                        >\r\n                          $ {foods.find((s) => s.id === item.food_id)?.price} x{\" \"}\r\n                          {item.quantity}\r\n                        </Typography>\r\n                        <span className={classes.itemTotal}>\r\n                          ${item.amount}\r\n                        </span>\r\n                        <span className={classes.itemShop}>\r\n                          Shop:{\" \"}\r\n                          {\r\n                            restaurants.find(\r\n                              (s) => s.id === order.restaurant_id\r\n                            )?.name\r\n                          }\r\n                        </span>\r\n                        <Typography\r\n                          type=\"subheading\"\r\n                          component=\"h3\"\r\n                          color={\r\n                            item.status === \"Cancelled\" ? \"error\" : \"secondary\"\r\n                          }\r\n                          style={{\r\n                            color: item.status === 2 ? 'green' : item.status === 3 ? 'red' : undefined\r\n                          }}\r\n                        >\r\n                          Status: {item.status === 2 ? \"Paid\" : item.status === 3 ? \"Cancel\" : \"Order\"}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </div>\r\n                  </Card>\r\n                  <Divider />\r\n                </span>\r\n              );\r\n            })}\r\n            <div className={classes.checkout}>\r\n              <span className={classes.total}>Total: {order.total}</span>\r\n            </div>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={5} sm={5}>\r\n          <Card className={classes.innerCard}>\r\n            <Typography\r\n              type=\"subheading\"\r\n              component=\"h2\"\r\n              className={classes.productTitle}\r\n              color=\"primary\"\r\n            >\r\n              Deliver to:\r\n            </Typography>\r\n            <Typography\r\n              type=\"subheading\"\r\n              component=\"h3\"\r\n              className={classes.info}\r\n              color=\"primary\"\r\n            >\r\n              <strong>{order.customer_name}</strong>\r\n            </Typography>\r\n            <br />\r\n            <Typography\r\n              type=\"subheading\"\r\n              component=\"h3\"\r\n              className={classes.info}\r\n              color=\"primary\"\r\n            >\r\n              {order.customer_email}\r\n            </Typography>\r\n            <Typography\r\n              type=\"subheading\"\r\n              component=\"h3\"\r\n              className={classes.itemShop}\r\n              color=\"primary\"\r\n            >\r\n              {order.recipient_address}\r\n            </Typography>\r\n            <br />\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\Product.js",["369","370","371","372","373"],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Suggestions from \"./../product/Suggestions\";\r\nimport AddToCart from \"./../cart/AddToCart\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DEFAULT_IMAGE } from \"../../config\";\r\nimport { getFood, resetFoods } from \"../../redux/foods\";\r\nimport { getRestaurant, getRestaurants } from \"../../redux/restaurants\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 30,\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n  },\r\n  card: {\r\n    padding: \"24px 40px 40px\",\r\n  },\r\n  subheading: {\r\n    margin: \"24px\",\r\n    color: theme.palette.openTitle,\r\n  },\r\n  price: {\r\n    padding: \"16px\",\r\n    margin: \"16px 0px\",\r\n    display: \"flex\",\r\n    backgroundColor: \"#93c5ae3d\",\r\n    fontSize: \"1.3em\",\r\n    color: \"#375a53\",\r\n  },\r\n  media: {\r\n    height: 200,\r\n    display: \"inline-block\",\r\n    width: \"50%\",\r\n    marginLeft: \"24px\",\r\n  },\r\n  icon: {\r\n    verticalAlign: \"sub\",\r\n  },\r\n  link: {\r\n    color: \"#3e4c54b3\",\r\n    fontSize: \"0.9em\",\r\n  },\r\n  addCart: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    padding: \"10px 12px\",\r\n    borderRadius: \"0.25em\",\r\n    backgroundColor: \"#5f7c8b\",\r\n  },\r\n  action: {\r\n    margin: \"8px 24px\",\r\n    display: \"inline-block\",\r\n  },\r\n}));\r\n\r\nexport default function Product({ match }) {\r\n  const classes = useStyles();\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const restaurants = useSelector((s) => s.restaurants);\r\n  const foods = useSelector((s) => s.foods);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(\r\n      getFood({ foodId: match.params.foodId, resId: match.params.resId })\r\n    );\r\n    dispatch(getRestaurants());\r\n    return () => {\r\n      dispatch(resetFoods());\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={10}>\r\n        <Grid item xs={7} sm={7}>\r\n          <Card className={classes.card}>\r\n            <CardHeader\r\n              title={foods.name}\r\n              subheader={\"In Stock\"}\r\n              action={\r\n                <span className={classes.action}>\r\n                  <AddToCart\r\n                    cartStyle={classes.addCart}\r\n                    food={foods[0]}\r\n                    shop_name={\r\n                      restaurants.find((r) => r.id === foods[0]?.restaurant_id)\r\n                        ?.name\r\n                    }\r\n                  />\r\n                </span>\r\n              }\r\n            />\r\n            <div className={classes.flex}>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={foods[0]?.img_url || DEFAULT_IMAGE + 200}\r\n                title={foods[0]?.name}\r\n              />\r\n              <Typography\r\n                component=\"p\"\r\n                variant=\"subtitle1\"\r\n                className={classes.subheading}\r\n              >\r\n                {foods[0]?.description}\r\n                <br />\r\n                <span className={classes.price}>$ {foods[0]?.price}</span>\r\n                <Link\r\n                  to={\"/restaurants/\" + foods[0]?.restaurant_id}\r\n                  className={classes.link}\r\n                >\r\n                  <span>\r\n                    <ShoppingBasketIcon className={classes.icon} />{\" \"}\r\n                    {\r\n                      restaurants.find((r) => r.id === foods[0]?.restaurant_id)\r\n                        ?.name\r\n                    }\r\n                  </span>\r\n                </Link>\r\n              </Typography>\r\n            </div>\r\n          </Card>\r\n        </Grid>\r\n        {suggestions.length > 0 && (\r\n          <Grid item xs={5} sm={5}>\r\n            <Suggestions products={suggestions} title=\"Related Products\" />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\order\\ShopOrders.js",["374","375","376","377"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ProductOrderEdit from \"./ProductOrderEdit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteBill, editBill, getBills, resetBills } from \"../../redux/bills\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport { Grid } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: theme.mixins.gutters({\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(5),\r\n  }),\r\n  title: {\r\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(3)}px ${theme.spacing(\r\n      1\r\n    )}px`,\r\n    color: theme.palette.protectedTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  subheading: {\r\n    marginTop: theme.spacing(1),\r\n    color: \"#434b4e\",\r\n    fontSize: \"1.1em\",\r\n  },\r\n  customerDetails: {\r\n    paddingLeft: \"36px\",\r\n    paddingTop: \"16px\",\r\n    backgroundColor: \"#f8f8f8\",\r\n  },\r\n}));\r\nexport default function ShopOrders({ match }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(0);\r\n  const orders = useSelector((s) => s.bills);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getBills({ resId: match.params.resId }));\r\n    return () => {\r\n      dispatch(resetBills());\r\n    };\r\n  }, []);\r\n  const handleClick = (index) => (event) => {\r\n    setOpen(index);\r\n  };\r\n  const handleEdit = (billId) => {\r\n    dispatch(\r\n      editBill({ billId, resId: match.params.resId, data: { status: 2 } })\r\n    );\r\n  };\r\n  const handleDelete = (billId) => {\r\n    dispatch(editBill({ billId, resId: match.params.resId, data: { status: 3 } }));\r\n  };\r\n\r\n  const updateOrders = (index, updatedOrder) => {};\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root} elevation={4}>\r\n        <Typography type=\"title\" className={classes.title}>\r\n          Orders in {match.params.shop}\r\n        </Typography>\r\n        <List dense>\r\n          {orders.map((order, index) => {\r\n            return (\r\n              <span key={index}>\r\n                <ListItem button onClick={handleClick(index)}>\r\n                  <ListItemText\r\n                    primary={`Order # ${order.id} ----- ${\r\n                      order.status === 2 ? \"Paid\" : order.status === 3 ? \"Cancel\" : \"Order\"\r\n                    }`}\r\n                    style={{color: order.status === 2 ? 'green' : order.status === 3 ? 'red' : undefined}}\r\n                    secondary={new Date(order.create_time).toDateString()}\r\n                  />\r\n                  {open == index ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Divider />\r\n                <Collapse\r\n                  component=\"li\"\r\n                  in={open == index}\r\n                  timeout=\"auto\"\r\n                  unmountOnExit\r\n                >\r\n                  <ProductOrderEdit\r\n                    shopId={match.params.resId}\r\n                    order={order}\r\n                    orderIndex={index}\r\n                    updateOrders={updateOrders}\r\n                  />\r\n                  <div className={classes.customerDetails}>\r\n                    <Typography\r\n                      type=\"subheading\"\r\n                      component=\"h3\"\r\n                      className={classes.subheading}\r\n                    >\r\n                      Deliver to:\r\n                    </Typography>\r\n                    <Typography\r\n                      type=\"subheading\"\r\n                      component=\"h3\"\r\n                      color=\"primary\"\r\n                    >\r\n                      <strong>{order.recipient_name}</strong> (\r\n                      {order.recipient_email})\r\n                    </Typography>\r\n                    <Typography\r\n                      type=\"subheading\"\r\n                      component=\"h3\"\r\n                      color=\"primary\"\r\n                    >\r\n                      {order.recipient_address}\r\n                    </Typography>\r\n                    <Typography\r\n                      type=\"subheading\"\r\n                      component=\"h3\"\r\n                      color=\"primary\"\r\n                    >\r\n                      {order.note}\r\n                    </Typography>\r\n                    <Divider />\r\n                    <Grid\r\n                      container\r\n                      style={{\r\n                        backgroundColor: \"rgb(248, 248, 248)\",\r\n                      }}\r\n                    >\r\n                      <div className=\"ml-auto mr-2 mt-3 mb-3\">\r\n                        <DoneIcon\r\n                          style={{ cursor: \"pointer\", fill: \"green\" }}\r\n                          onClick={() => handleEdit(order.id)}\r\n                        />\r\n                        <DeleteOutlineIcon\r\n                          style={{ cursor: \"pointer\", fill: \"red\" }}\r\n                          onClick={() => handleDelete(order.id)}\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </div>\r\n                </Collapse>\r\n                <Divider />\r\n              </span>\r\n            );\r\n          })}\r\n        </List>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\saga\\index.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\Alert.js",[],"D:\\code\\Du_an\\frontend\\src\\config.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\order\\ProductOrderEdit.js",["378","379","380","381","382","383","384","385"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBill } from \"../../redux/bills\";\r\nimport { resetBillDetails } from \"../../redux/billDetails\";\r\nimport foods, {\r\n  getFoods,\r\n  getFoodsByResId,\r\n  resetFoods,\r\n} from \"../../redux/foods\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n    paddingBottom: 0,\r\n  },\r\n  listImg: {\r\n    width: \"70px\",\r\n    verticalAlign: \"top\",\r\n    marginRight: \"10px\",\r\n  },\r\n  listDetails: {\r\n    display: \"inline-block\",\r\n  },\r\n  listQty: {\r\n    margin: 0,\r\n    fontSize: \"0.9em\",\r\n    color: \"#5f7c8b\",\r\n  },\r\n  textField: {\r\n    width: \"160px\",\r\n    marginRight: \"16px\",\r\n  },\r\n  statusMessage: {\r\n    position: \"absolute\",\r\n    zIndex: \"12\",\r\n    right: \"5px\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\nexport default function ProductOrderEdit(props) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    open: 0,\r\n    statusValues: [],\r\n    error: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const order = useSelector((s) => s.billDetails);\r\n  const foods = useSelector((s) => s.foods);\r\n  useEffect(() => {\r\n    dispatch(getBill({ resId: props.shopId, billId: props.order.id }));\r\n    dispatch(getFoodsByResId({ resId: props.shopId }));\r\n    return () => {\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Typography\r\n        component=\"span\"\r\n        color=\"error\"\r\n        className={classes.statusMessage}\r\n      >\r\n        {values.error}\r\n      </Typography>\r\n      <List disablePadding style={{ backgroundColor: \"#f8f8f8\" }}>\r\n        {order?.bill_detail &&\r\n          order.bill_detail.map((item, index) => {\r\n            return (\r\n              <span key={index}>\r\n                {item.restaurant_id === props.resId && (\r\n                  <ListItem button className={classes.nested}>\r\n                    <ListItemText\r\n                      primary={\r\n                        <div>\r\n                          <img\r\n                            className={classes.listImg}\r\n                            src={foods.find((s) => s.id === item.food_id)?.img_url}\r\n                            alt=\"\"\r\n                          />\r\n                          <div className={classes.listDetails}>\r\n                            {foods.find((s) => s.id === item.food_id)?.name}\r\n                            <p className={classes.listQty}>\r\n                              {\"Quantity: \" + item.quantity}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      }\r\n                    />\r\n                    {/* <TextField\r\n                      id=\"select-status\"\r\n                      select\r\n                      label=\"Update Status\"\r\n                      className={classes.textField}\r\n                      value={item.status}\r\n                      onChange={handleStatusChange(index)}\r\n                      SelectProps={{\r\n                        MenuProps: {\r\n                          className: classes.menu,\r\n                        },\r\n                      }}\r\n                      margin=\"normal\"\r\n                    >\r\n                      {values.statusValues.map((option) => (\r\n                        <MenuItem key={option} value={option}>\r\n                          {option}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField> */}\r\n                  </ListItem>\r\n                )}\r\n                <Divider style={{ margin: \"auto\", width: \"80%\" }} />\r\n              </span>\r\n            );\r\n          })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\nProductOrderEdit.propTypes = {\r\n  shopId: PropTypes.string.isRequired,\r\n  order: PropTypes.object.isRequired,\r\n  orderIndex: PropTypes.number.isRequired,\r\n  updateOrders: PropTypes.func.isRequired,\r\n};\r\n","D:\\code\\Du_an\\frontend\\src\\components\\cart\\AddToCart.js",["386"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport DisabledCartIcon from \"@material-ui/icons/RemoveShoppingCart\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../../redux/cart\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n    width: \"28px\",\r\n    height: \"28px\",\r\n  },\r\n  disabledIconButton: {\r\n    color: \"#7f7563\",\r\n    width: \"28px\",\r\n    height: \"28px\",\r\n  },\r\n}));\r\n\r\nexport default function AddToCart({ food, shop_name, cartStyle }) {\r\n  const classes = useStyles();\r\n  const [redirect, setRedirect] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const addToCart = () => {\r\n    const xFactor = localStorage.getItem(\"resId\");\r\n    if (Number(xFactor) === Number(food.restaurant_id) || !xFactor) {\r\n      dispatch(addItem({ item: { ...food, quantity: 1, shop_name } }));\r\n      setRedirect({ redirect: true });\r\n    } else {\r\n      return <Redirect to={\"/restaurants/\" + xFactor} />;\r\n    }\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to={\"/cart\"} />;\r\n  }\r\n  return (\r\n    <span>\r\n      {1 >= 0 ? (\r\n        <IconButton color=\"secondary\" dense=\"dense\" onClick={addToCart}>\r\n          <AddCartIcon className={cartStyle || classes.iconButton} />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton disabled={true} color=\"secondary\" dense=\"dense\">\r\n          <DisabledCartIcon\r\n            className={cartStyle || classes.disabledIconButton}\r\n          />\r\n        </IconButton>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nAddToCart.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  cartStyle: PropTypes.string,\r\n};\r\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\Suggestions.js",[],"D:\\code\\Du_an\\frontend\\src\\apis\\bills.js",[],"D:\\code\\Du_an\\frontend\\src\\saga\\socket.js",["387"],"import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_TOKEN, GET_TOKEN_SUCCESS } from \"../redux/socket\";\r\nimport { notifyErrorMsg } from \"../redux/Alert\";\r\nimport { getToken } from \"../apis/auth\";\r\nfunction* getTokenSaga({ payload }) {\r\n  try {\r\n    const {data: {token}} = yield call(getToken, payload);\r\n    yield put({ type: GET_TOKEN_SUCCESS, payload: token });\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err);\r\n  }\r\n}\r\n\r\nexport default function* socketWatcher() {\r\n  yield takeEvery(GET_TOKEN, getTokenSaga);\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\saga\\comments.js",["388"],"import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { createComment, deleteComment, getComments } from \"../apis/comments\";\r\nimport { notifyErrorMsg } from \"../redux/Alert\";\r\nimport {\r\n  CREATE_COMMENT,\r\n  DELETE_COMMENT,\r\n  getComment,\r\n  GET_COMMENT,\r\n  GET_COMMENTS,\r\n  GET_COMMENT_SUCCESS,\r\n} from \"../redux/comments\";\r\n\r\nfunction* getCommentsSaga({ payload }) {\r\n  try {\r\n    const { success, data } = yield call(getComments, payload);\r\n    if (success) {\r\n      yield put({ type: GET_COMMENT_SUCCESS, payload: data });\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\nfunction* getCommentSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(getComment, payload);\r\n    if (data) {\r\n      //   yield put({ type: GET_BILLS_SUCCESS, payload: data });\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\nfunction* createCommentSaga({ payload }) {\r\n  try {\r\n    const { resId } = payload;\r\n    const { success } = yield call(createComment, payload);\r\n    if (success) {\r\n      yield put({ type: GET_COMMENTS, payload: { resId } });\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\nfunction* deleteCommentSaga({ payload }) {\r\n  try {\r\n    const { resId } = payload;\r\n    const { success } = yield call(deleteComment, payload);\r\n    if (success) {\r\n      yield put({ type: GET_COMMENTS, payload: { resId } });\r\n      //   yield put({ type: GET_BILLS, payload: { resId } });\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nexport default function* commentsWatcher() {\r\n  yield all([\r\n    yield takeEvery(GET_COMMENTS, getCommentsSaga),\r\n    yield takeEvery(GET_COMMENT, getCommentSaga),\r\n    yield takeEvery(CREATE_COMMENT, createCommentSaga),\r\n    yield takeEvery(DELETE_COMMENT, deleteCommentSaga),\r\n  ]);\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\saga\\restaurants.js",["389","390","391","392"],"import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  CREATE_RESTAURANT,\r\n  CREATE_RESTAURANT_SUCCESS,\r\n  DELETE_RESTAURANT,\r\n  DELETE_RESTAURANT_SUCCESS,\r\n  EDIT_RESTAURANT,\r\n  EDIT_RESTAURANT_SUCCESS,\r\n  GET_RESTAURANT,\r\n  GET_RESTAURANTS,\r\n  GET_RESTAURANTS_SUCCESS,\r\n  GET_RESTAURANT_SUCCESS,\r\n} from \"../redux/restaurants\";\r\nimport {\r\n  editRestaurant,\r\n  getRestaurants,\r\n  getRestaurant,\r\n  deleteRestaurant,\r\n  createRestaurant,\r\n} from \"../apis/restaurants\";\r\nimport { notifyErrorMsg, notifySuccess } from \"../redux/Alert\";\r\nfunction* getRestaurantsSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(getRestaurants, payload);\r\n    yield put({ type: GET_RESTAURANTS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\nfunction* getRestaurantSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(getRestaurant, payload);\r\n    yield put({ type: GET_RESTAURANT_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\nfunction* editRestaurantSaga({ payload }) {\r\n  try {\r\n    const result = yield call(editRestaurant, payload);\r\n    notifySuccess()\r\n    yield put({ type: EDIT_RESTAURANT_SUCCESS });\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\nfunction* deleteRestaurantSaga({ payload }) {\r\n  try {\r\n    const result = yield call(deleteRestaurant, payload);\r\n    yield put({ type: GET_RESTAURANTS });\r\n  } catch (err) {\r\n    console.log(err)\r\n\r\n  }\r\n}\r\nfunction* createRestaurantSaga({ payload }) {\r\n  try {\r\n    const result = yield call(createRestaurant, payload);\r\n    console.log(result);\r\n    yield put({ type: CREATE_RESTAURANT_SUCCESS });\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nexport default function* restaurantsWatcher() {\r\n  yield all([\r\n    yield takeEvery(GET_RESTAURANTS, getRestaurantsSaga),\r\n    yield takeEvery(GET_RESTAURANT, getRestaurantSaga),\r\n    yield takeEvery(EDIT_RESTAURANT, editRestaurantSaga),\r\n    yield takeEvery(DELETE_RESTAURANT, deleteRestaurantSaga),\r\n    yield takeEvery(CREATE_RESTAURANT, createRestaurantSaga),\r\n  ]);\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\saga\\categories.js",["393"],"import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_CATEGORIES, GET_CATEGORIES_SUCCESS } from \"../redux/categories\";\r\nimport { getCategories } from \"../apis/categories\";\r\nimport { notifyErrorMsg } from \"../redux/Alert\";\r\nfunction* getCategoriesSaga({ payload }) {\r\n  try {\r\n    const result = yield call(getCategories, payload);\r\n    console.log(result);\r\n    yield put({ type: GET_CATEGORIES_SUCCESS });\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\n\r\nexport default function* categoriesWatcher() {\r\n  yield takeEvery(GET_CATEGORIES, getCategoriesSaga);\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\saga\\bills.js",["394"],"import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  createBill,\r\n  deleteBill,\r\n  editBill,\r\n  getBill,\r\n  getBills,\r\n  totalBills,\r\n} from \"../apis/bills\";\r\nimport { notifyErrorMsg } from \"../redux/Alert\";\r\nimport {\r\n  CREATE_BILLS,\r\n  CREATE_BILLS_SUCCESS,\r\n  DELETE_BILL,\r\n  EDIT_BILL,\r\n  GET_BILL,\r\n  GET_BILLS,\r\n  GET_BILLS_SUCCESS,\r\n  GET_BILL_SUCCESS,\r\n  GET_TOTAL_BILL,\r\n} from \"../redux/bills\";\r\n\r\nfunction* getBillsSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(getBills, payload);\r\n    yield put({ type: GET_BILLS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\nfunction* getBillSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(getBill, payload);\r\n    yield put({ type: GET_BILL_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* createBillSaga({ payload }) {\r\n  try {\r\n    const { success, data } = yield call(createBill, payload);\r\n    if (success) {\r\n      payload.history.push(\"/user/\" + payload.data.user_id);\r\n      yield put({ type: CREATE_BILLS_SUCCESS });\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* getTotalBillsSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(totalBills, payload);\r\n    if (data) {\r\n      yield put({ type: GET_BILLS_SUCCESS, payload: data });\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* editBillSaga({ payload }) {\r\n  try {\r\n    const { resId } = payload;\r\n    const { success } = yield call(editBill, payload);\r\n    if (success) {\r\n      yield put({ type: GET_BILLS, payload: { resId } });\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* deleteBillSaga({ payload }) {\r\n  try {\r\n    const { resId } = payload;\r\n    const { success } = yield call(deleteBill, payload);\r\n    if (success) {\r\n      yield put({ type: GET_BILLS, payload: { resId } });\r\n    }\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\n\r\nexport default function* billsWatcher() {\r\n  yield all([\r\n    yield takeEvery(GET_BILLS, getBillsSaga),\r\n    yield takeEvery(GET_BILL, getBillSaga),\r\n    yield takeEvery(GET_TOTAL_BILL, getTotalBillsSaga),\r\n    yield takeEvery(CREATE_BILLS, createBillSaga),\r\n    yield takeEvery(EDIT_BILL, editBillSaga),\r\n    yield takeEvery(DELETE_BILL, deleteBillSaga),\r\n  ]);\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\saga\\foods.js",["395","396"],"import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  CREATE_FOOD,\r\n  CREATE_FOOD_SUCCESS,\r\n  DELETE_FOOD,\r\n  DELETE_FOOD_SUCCESS,\r\n  EDIT_FOOD,\r\n  EDIT_FOOD_SUCCESS,\r\n  GET_FOOD,\r\n  GET_FOODS,\r\n  GET_FOODS_BY_RESID,\r\n  GET_FOODS_BY_RESID_SUCCESS,\r\n  GET_FOODS_SUCCESS,\r\n  GET_FOOD_SUCCESS,\r\n} from \"../redux/foods\";\r\nimport {\r\n  createFood,\r\n  deleteFood,\r\n  editFood,\r\n  getFood,\r\n  getFoods,\r\n  getFoodsByResId,\r\n} from \"../apis/foods\";\r\nimport { notifyErrorMsg } from \"../redux/Alert\";\r\nfunction* getFoodsSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(getFoods, payload);\r\n    yield put({ type: GET_FOODS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* getFoodsByResIdSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(getFoodsByResId, payload);\r\n    yield put({ type: GET_FOODS_BY_RESID_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* getFoodSaga({ payload }) {\r\n  try {\r\n    const { data } = yield call(getFood, payload);\r\n    yield put({ type: GET_FOOD_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* editFoodSaga({ payload }) {\r\n  try {\r\n    const {} = yield call(editFood, payload);\r\n    yield put({ type: EDIT_FOOD_SUCCESS });\r\n  } catch (err) {\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* deleteFoodSaga({ payload }) {\r\n  const { resId } = payload;\r\n  try {\r\n    const { success } = yield call(deleteFood, payload);\r\n    if (success) {\r\n    }\r\n    yield put({ type: GET_FOODS_BY_RESID, payload: { resId } });\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\nfunction* createFoodSaga({ payload }) {\r\n  try {\r\n    const result = yield call(createFood, payload);\r\n    console.log(result);\r\n    yield put({ type: CREATE_FOOD_SUCCESS });\r\n  } catch (err) {\r\n    console.log(err)\r\n    notifyErrorMsg(err)\r\n  }\r\n}\r\n\r\nexport default function* foodsWatcher() {\r\n  yield all([\r\n    yield takeEvery(GET_FOODS, getFoodsSaga),\r\n    yield takeEvery(GET_FOODS_BY_RESID, getFoodsByResIdSaga),\r\n    yield takeEvery(GET_FOOD, getFoodSaga),\r\n    yield takeEvery(CREATE_FOOD, createFoodSaga),\r\n    yield takeEvery(EDIT_FOOD, editFoodSaga),\r\n    yield takeEvery(DELETE_FOOD, deleteFoodSaga),\r\n  ]);\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\saga\\auth.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\cart\\CartItems.js",["397"],"import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DEFAULT_IMAGE } from \"../../config\";\r\nimport {\r\n  removeItem as removeItemFromCart,\r\n  changeQuantity as changeQuantityCart,\r\n} from \"../../redux/cart\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: \"24px 0px\",\r\n    padding: \"16px 40px 60px 40px\",\r\n    backgroundColor: \"#80808017\",\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    color: theme.palette.openTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  price: {\r\n    color: theme.palette.text.secondary,\r\n    display: \"inline\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    marginTop: 0,\r\n    width: 50,\r\n  },\r\n  productTitle: {\r\n    fontSize: \"1.15em\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  subheading: {\r\n    color: \"rgba(88, 114, 128, 0.67)\",\r\n    padding: \"8px 10px 0\",\r\n    cursor: \"pointer\",\r\n    display: \"inline-block\",\r\n  },\r\n  cart: {\r\n    width: \"100%\",\r\n    display: \"inline-flex\",\r\n  },\r\n  details: {\r\n    display: \"inline-block\",\r\n    width: \"100%\",\r\n    padding: \"4px\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n    padding: \"16px 8px 0px\",\r\n  },\r\n  cover: {\r\n    width: 160,\r\n    height: 125,\r\n    margin: \"8px\",\r\n  },\r\n  itemTotal: {\r\n    float: \"right\",\r\n    marginRight: \"40px\",\r\n    fontSize: \"1.5em\",\r\n    color: \"rgb(72, 175, 148)\",\r\n  },\r\n  checkout: {\r\n    float: \"right\",\r\n    margin: \"24px\",\r\n  },\r\n  total: {\r\n    fontSize: \"1.2em\",\r\n    color: \"rgb(53, 97, 85)\",\r\n    marginRight: \"16px\",\r\n    fontWeight: \"600\",\r\n    verticalAlign: \"bottom\",\r\n  },\r\n  continueBtn: {\r\n    marginLeft: \"10px\",\r\n  },\r\n  itemShop: {\r\n    display: \"block\",\r\n    fontSize: \"0.90em\",\r\n    color: \"#78948f\",\r\n  },\r\n  removeButton: {\r\n    fontSize: \"0.8em\",\r\n  },\r\n}));\r\n\r\nexport default function CartItems(props) {\r\n  const classes = useStyles();\r\n  const cartItems = useSelector((s) => s.cart);\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((s) => s.auth);\r\n\r\n  const getTotal = () => {\r\n    return cartItems.reduce((a, b) => {\r\n      return a + b.quantity * b.price;\r\n    }, 0);\r\n  };\r\n\r\n  const removeItem = (item) => {\r\n    dispatch(removeItemFromCart({ item }));\r\n  };\r\n\r\n  const changeQuantity = (e, id) => {\r\n    dispatch(changeQuantityCart({ id, quantity: e.target.value }));\r\n  };\r\n\r\n  const openCheckout = () => {\r\n    props.setCheckout(true);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Typography type=\"title\" className={classes.title}>\r\n        Shopping Cart\r\n      </Typography>\r\n      {cartItems.length > 0 ? (\r\n        <span>\r\n          {cartItems.map((item, i) => {\r\n            return (\r\n              <span key={i}>\r\n                <Card className={classes.cart}>\r\n                  <CardMedia\r\n                    className={classes.cover}\r\n                    image={item?.img_url || DEFAULT_IMAGE + 300}\r\n                    title={item.name}\r\n                  />\r\n                  <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                      <Link to={\"/product/\" + item.food_id}>\r\n                        <Typography\r\n                          type=\"title\"\r\n                          component=\"h3\"\r\n                          className={classes.productTitle}\r\n                          color=\"primary\"\r\n                        >\r\n                          {item.name}\r\n                        </Typography>\r\n                      </Link>\r\n                      <div>\r\n                        <Typography\r\n                          type=\"subheading\"\r\n                          component=\"h3\"\r\n                          className={classes.price}\r\n                          color=\"primary\"\r\n                        >\r\n                          $ {item.price}\r\n                        </Typography>\r\n                        <span className={classes.itemTotal}>\r\n                          ${item.price * item.quantity}\r\n                        </span>\r\n                        <span className={classes.itemShop}>\r\n                          Shop: {item.shop_name}\r\n                        </span>\r\n                      </div>\r\n                    </CardContent>\r\n                    <div className={classes.subheading}>\r\n                      Quantity:\r\n                      <TextField\r\n                        value={item.quantity}\r\n                        onChange={(e) => changeQuantity(e, item.id)}\r\n                        type=\"number\"\r\n                        inputProps={{\r\n                          min: 1,\r\n                        }}\r\n                        className={classes.textField}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        margin=\"normal\"\r\n                      />\r\n                      <Button\r\n                        className={classes.removeButton}\r\n                        color=\"primary\"\r\n                        onClick={() => removeItem(item)}\r\n                      >\r\n                        x Remove\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n                <Divider />\r\n              </span>\r\n            );\r\n          })}\r\n          <div className={classes.checkout}>\r\n            <span className={classes.total}>Total: ${getTotal()}</span>\r\n            {!props.checkout &&\r\n              (auth.email ? (\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  onClick={openCheckout}\r\n                >\r\n                  Checkout\r\n                </Button>\r\n              ) : (\r\n                <Link to=\"/signin\">\r\n                  <Button color=\"primary\" variant=\"contained\">\r\n                    Sign in to checkout\r\n                  </Button>\r\n                </Link>\r\n              ))}\r\n            <Link to={`/restaurants/${cartItems[0]?.restaurant_id}`} className={classes.continueBtn}>\r\n              <Button variant=\"contained\">Continue Shopping</Button>\r\n            </Link>\r\n          </div>\r\n        </span>\r\n      ) : (\r\n        <Typography variant=\"subtitle1\" component=\"h3\" color=\"primary\">\r\n          No items added to your cart.\r\n        </Typography>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nCartItems.propTypes = {\r\n  checkout: PropTypes.bool.isRequired,\r\n  setCheckout: PropTypes.func.isRequired,\r\n};\r\n","D:\\code\\Du_an\\frontend\\src\\components\\cart\\Checkout.js",["398","399"],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport PlaceOrder from \"./PlaceOrder\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: \"24px 0px\",\r\n    padding: \"16px 40px 90px 40px\",\r\n    backgroundColor: \"#80808017\",\r\n  },\r\n  title: {\r\n    margin: \"24px 16px 8px 0px\",\r\n    color: theme.palette.openTitle,\r\n  },\r\n  subheading: {\r\n    color: \"rgba(88, 114, 128, 0.87)\",\r\n    marginTop: \"20px\",\r\n  },\r\n  addressField: {\r\n    marginTop: \"4px\",\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"45%\",\r\n  },\r\n  streetField: {\r\n    marginTop: \"4px\",\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"93%\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"90%\",\r\n  },\r\n}));\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const user = useSelector((s) => s.auth);\r\n  const [values, setValues] = useState({\r\n    note: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Typography type=\"title\" className={classes.title}>\r\n        Checkout\r\n      </Typography>\r\n      <TextField\r\n        id=\"name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={user.name}\r\n        margin=\"normal\"\r\n        disabled\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"email\"\r\n        type=\"email\"\r\n        label=\"Email\"\r\n        className={classes.textField}\r\n        value={user.email}\r\n        margin=\"normal\"\r\n        disabled\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"phone\"\r\n        type=\"phone\"\r\n        label=\"Phone\"\r\n        className={classes.textField}\r\n        value={user.phone}\r\n        margin=\"normal\"\r\n        disabled\r\n      />\r\n      <br />\r\n      <TextField\r\n        id=\"address\"\r\n        label=\"Address\"\r\n        className={classes.textField}\r\n        value={user.address}\r\n        margin=\"normal\"\r\n        disabled\r\n      />\r\n      <br />\r\n      <TextField\r\n            id=\"multiline-flexible\"\r\n            label=\"Note\"\r\n            multiline\r\n            rows=\"4\"\r\n            value={values.note}\r\n            onChange={(e) => setValues({...values, note: e.target.value})}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n          /><br/>\r\n      <br />{\" \"}\r\n      {values.error && (\r\n        <Typography component=\"p\" color=\"error\">\r\n          <Icon color=\"error\" className={classes.error}>\r\n            error\r\n          </Icon>\r\n          {values.error}\r\n        </Typography>\r\n      )}\r\n      <div>\r\n        <PlaceOrder note={values.note} />\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\apis\\auth.js",[],"D:\\code\\Du_an\\frontend\\src\\apis\\comments.js",[],"D:\\code\\Du_an\\frontend\\src\\apis\\restaurants.js",[],"D:\\code\\Du_an\\frontend\\src\\apis\\categories.js",[],"D:\\code\\Du_an\\frontend\\src\\apis\\foods.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\cart\\PlaceOrder.js",["400","401"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createBill } from \"../../redux/bills\";\r\nimport auth from \"../../redux/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subheading: {\r\n    color: \"rgba(88, 114, 128, 0.87)\",\r\n    marginTop: \"20px\",\r\n  },\r\n  checkout: {\r\n    float: \"right\",\r\n    margin: \"20px 30px\",\r\n  },\r\n  error: {\r\n    display: \"inline\",\r\n    padding: \"0px 10px\",\r\n  },\r\n  errorIcon: {\r\n    verticalAlign: \"middle\",\r\n  },\r\n  StripeElement: {\r\n    display: \"block\",\r\n    margin: \"24px 0 10px 10px\",\r\n    maxWidth: \"408px\",\r\n    padding: \"10px 14px\",\r\n    boxShadow:\r\n      \"rgba(50, 50, 93, 0.14902) 0px 1px 3px, rgba(0, 0, 0, 0.0196078) 0px 1px 0px\",\r\n    borderRadius: \"4px\",\r\n    background: \"white\",\r\n  },\r\n}));\r\n\r\nconst PlaceOrder = ({ note }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    error: \"\",\r\n    redirect: false,\r\n    orderId: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const cart = useSelector((s) => s.cart);\r\n  const auth = useSelector((s) => s.auth);\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createBill({\r\n        resId: localStorage.getItem(\"resId\"),\r\n        history,\r\n        data: {\r\n          bills: cart.map((s) => ({ food_id: s.id, quantity: s.quantity })),\r\n          ship_price: 30,\r\n          note,\r\n          userId: auth.user_id\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  if (values.redirect) {\r\n    return <Redirect to={\"/order/\" + values.orderId} />;\r\n  }\r\n  return (\r\n    <span>\r\n      <div className={classes.checkout}>\r\n        {values.error && (\r\n          <Typography component=\"span\" color=\"error\" className={classes.error}>\r\n            <Icon color=\"error\" className={classes.errorIcon}>\r\n              error\r\n            </Icon>\r\n            {values.error}\r\n          </Typography>\r\n        )}\r\n        <Button color=\"secondary\" variant=\"contained\" onClick={placeOrder}>\r\n          Place Order\r\n        </Button>\r\n      </div>\r\n    </span>\r\n  );\r\n};\r\nPlaceOrder.propTypes = {\r\n  checkoutDetails: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PlaceOrder;\r\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Comments.js",["402","403"],"import React, { useState } from \"react\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DEFAULT_AVATAR } from \"../../config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { createComment, deleteComment } from \"../../redux/comments\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardHeader: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  smallAvatar: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  commentField: {\r\n    width: \"96%\",\r\n  },\r\n  commentText: {\r\n    backgroundColor: \"white\",\r\n    padding: theme.spacing(1),\r\n    margin: `2px ${theme.spacing(2)}px 2px 2px`,\r\n  },\r\n  commentDate: {\r\n    display: \"block\",\r\n    color: \"gray\",\r\n    fontSize: \"0.8em\",\r\n  },\r\n  commentDelete: {\r\n    fontSize: \"1.6em\",\r\n    verticalAlign: \"middle\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nexport default function Comments(props) {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState(\"\");\r\n  const auth = useSelector((s) => s.auth);\r\n  const comments = useSelector((s) => s.comments);\r\n  const dispatch = useDispatch();\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const addComment = (event) => {\r\n    if (event.keyCode === 13 && event.target.value) {\r\n      event.preventDefault();\r\n      setText('');\r\n      dispatch(createComment({ resId: props.shopId, data: { content: text } }));\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = (comment_id) => {\r\n    dispatch(deleteComment({resId: props.shopId, comment_id}))\r\n  };\r\n\r\n  const commentBody = (item) => {\r\n    console.log(item)\r\n    return (\r\n      <p className={classes.commentText}>\r\n        {/* <Link>{item.postedBy.name}</Link><br/> */}\r\n        {item.content}\r\n        <span className={classes.commentDate}>\r\n          {moment(item.create_time).format(\"MM DD YYYY - HH:mm\")} |\r\n          {auth.user_id === item.user_id && (\r\n            <DeleteIcon\r\n              onClick={() => handleDeleteComment(item.id)}\r\n              className={classes.commentDelete}\r\n            />\r\n          )}\r\n        </span>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardHeader\r\n        avatar={<Avatar className={classes.smallAvatar} src={auth.img_url} />}\r\n        title={\r\n          <TextField\r\n            onKeyDown={addComment}\r\n            multiline\r\n            value={text}\r\n            onChange={handleChange}\r\n            placeholder=\"Write something ...\"\r\n            className={classes.commentField}\r\n            margin=\"normal\"\r\n          />\r\n        }\r\n        className={classes.cardHeader}\r\n      />\r\n      {comments.map((item, i) => {\r\n        console.log({item})\r\n        return (\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar className={classes.smallAvatar} src={item.img_url} />\r\n            }\r\n            title={commentBody(item)}\r\n            className={classes.cardHeader}\r\n            key={i}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nComments.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comments: PropTypes.array.isRequired,\r\n  updateComments: PropTypes.func.isRequired,\r\n};\r\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\MyProducts.js",["404","405","406"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DeleteProduct from \"./../product/DeleteProduct\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteFood, getFoodsByResId } from \"../../redux/foods\";\r\nimport { DEFAULT_AVATAR } from \"../../config\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  products: {\r\n    padding: \"24px\",\r\n  },\r\n  addButton: {\r\n    float: \"right\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: \"8px\",\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    color: theme.palette.protectedTitle,\r\n    fontSize: \"1.2em\",\r\n  },\r\n  subheading: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.openTitle,\r\n  },\r\n  cover: {\r\n    width: 110,\r\n    height: 100,\r\n    margin: \"8px\",\r\n  },\r\n  details: {\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function MyProducts(props) {\r\n  const classes = useStyles();\r\n  const foods = useSelector((s) => s.foods);\r\n  const dispatch = useDispatch();\r\n  const removeProduct = (productId) => {\r\n    dispatch(deleteFood({ foodId: productId, resId: props.shopId }));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getFoodsByResId({ resId: props.shopId }));\r\n  }, []);\r\n  return (\r\n    <Card className={classes.products}>\r\n      <Typography type=\"title\" className={classes.title}>\r\n        Foods\r\n        <span className={classes.addButton}>\r\n          <Link to={\"/seller/\" + props.shopId + \"/foods/new\"}>\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              <AddBox className={classes.leftIcon} /> New Food\r\n            </Button>\r\n          </Link>\r\n        </span>\r\n      </Typography>\r\n      <List dense>\r\n        {foods.map((product, i) => {\r\n          return (\r\n            <span key={i}>\r\n              <ListItem>\r\n                <CardMedia\r\n                  className={classes.cover}\r\n                  image={product?.img_url}\r\n                  style={{objectFit: 'cover'}}\r\n                  title={product.name}\r\n                />\r\n                <div className={classes.details}>\r\n                  <Typography\r\n                    type=\"headline\"\r\n                    variant=\"h5\"\r\n                    color=\"primary\"\r\n                    className={classes.productTitle}\r\n                  >\r\n                    {product.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    type=\"subheading\"\r\n                    component=\"h4\"\r\n                    className={classes.subheading}\r\n                  >\r\n                    Price: ${product.price}\r\n                  </Typography>\r\n                  <Typography\r\n                    type=\"subheading\"\r\n                    component=\"h4\"\r\n                    className={classes.subheading}\r\n                  >\r\n                    Description: ${product.description}\r\n                  </Typography>\r\n                </div>\r\n                <ListItemSecondaryAction>\r\n                  <Link\r\n                    to={\"/seller/\" + props.shopId + \"/\" + product.id + \"/edit\"}\r\n                  >\r\n                    <IconButton aria-label=\"Edit\" color=\"primary\">\r\n                      <Edit />\r\n                    </IconButton>\r\n                  </Link>\r\n                  <DeleteProduct\r\n                    product={product}\r\n                    shopId={props.shopId}\r\n                    onRemove={() => removeProduct(product.id)}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <Divider />\r\n            </span>\r\n          );\r\n        })}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\nMyProducts.propTypes = {\r\n  shopId: PropTypes.string.isRequired,\r\n};\r\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\DeleteShop.js",["407"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function DeleteShop(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const auth = useSelector((s) => s.auth);\r\n  const clickButton = () => {\r\n    setOpen(true);\r\n  };\r\n  const deleteShop = () => {\r\n    props.onRemove();\r\n    setOpen(false);\r\n  };\r\n  const handleRequestClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <span>\r\n      <IconButton aria-label=\"Delete\" onClick={clickButton} color=\"secondary\">\r\n        <DeleteIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={open} onClose={handleRequestClose}>\r\n        <DialogTitle>{\"Delete \" + props.shop.name}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Confirm to delete your shop {props.shop.name}.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleRequestClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deleteShop} color=\"secondary\" autoFocus=\"autoFocus\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </span>\r\n  );\r\n}\r\nDeleteShop.propTypes = {\r\n  shop: PropTypes.object.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\Products.js",["408"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport AddToCart from \"./../cart/AddToCart\";\r\nimport { DEFAULT_IMAGE } from \"../../config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRestaurants, resetRestaurants } from \"../../redux/restaurants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    background: theme.palette.background.paper,\r\n    textAlign: \"left\",\r\n    padding: \"0 8px\",\r\n  },\r\n  container: {\r\n    minWidth: \"100%\",\r\n    paddingBottom: \"14px\",\r\n  },\r\n  gridList: {\r\n    width: \"100%\",\r\n    minHeight: 200,\r\n    padding: \"16px 0 10px\",\r\n  },\r\n  title: {\r\n    padding: `${theme.spacing(3)}px ${theme.spacing(2.5)}px ${theme.spacing(\r\n      2\r\n    )}px`,\r\n    color: theme.palette.openTitle,\r\n    width: \"100%\",\r\n  },\r\n  tile: {\r\n    textAlign: \"center\",\r\n  },\r\n  image: {\r\n    height: \"100%\",\r\n  },\r\n  tileBar: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.72)\",\r\n    textAlign: \"left\",\r\n  },\r\n  tileTitle: {\r\n    fontSize: \"1.1em\",\r\n    marginBottom: \"5px\",\r\n    color: \"rgb(189, 222, 219)\",\r\n    display: \"block\",\r\n  },\r\n}));\r\n\r\nexport default function Products({ foods, searched }) {\r\n  const classes = useStyles();\r\n  const restaurants = useSelector((s) => s.restaurants);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    params: { resId },\r\n  } = useRouteMatch();\r\n  useEffect(() => {\r\n    dispatch(getRestaurants());\r\n    return () => {\r\n      dispatch(resetRestaurants());\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={classes.root}>\r\n      {foods?.length > 0 ? (\r\n        <div className={classes.container}>\r\n          <GridList cellHeight={200} className={classes.gridList} cols={3}>\r\n            {foods.map((food, i) => (\r\n              <GridListTile key={i} className={classes.tile}>\r\n                <Link to={\"/food/\" + resId + \"/\" + food.id}>\r\n                  <img\r\n                    className={classes.image}\r\n                    src={food?.img_url || DEFAULT_IMAGE + 300}\r\n                    style={{width: '100%', objectFit: 'cover'}}\r\n                    alt={food.name}\r\n                  />\r\n                </Link>\r\n                <GridListTileBar\r\n                  className={classes.tileBar}\r\n                  title={\r\n                    <Link\r\n                      to={\"/food/\" + resId + \"/\" + food.id}\r\n                      className={classes.tileTitle}\r\n                    >\r\n                      {food.name}\r\n                    </Link>\r\n                  }\r\n                  subtitle={<span>$ {food.price}</span>}\r\n                  actionIcon={\r\n                    <AddToCart\r\n                      food={food}\r\n                      shop_name={\r\n                        restaurants.find(\r\n                          (r) => r.id === food?.restaurant_id\r\n                        )?.name\r\n                      }\r\n                    />\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </div>\r\n      ) : (\r\n        searched && (\r\n          <Typography\r\n            variant=\"subheading\"\r\n            component=\"h4\"\r\n            className={classes.title}\r\n          >\r\n            No products found! :(\r\n          </Typography>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nProducts.propTypes = {\r\n  foods: PropTypes.array.isRequired,\r\n  searched: PropTypes.bool.isRequired,\r\n};\r\n","D:\\code\\Du_an\\frontend\\src\\components\\order\\MyOrders.js",["409","410","411"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetBills, getTotalBills } from \"../../redux/bills\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: theme.mixins.gutters({\r\n    maxWidth: 600,\r\n    margin: \"12px 24px\",\r\n    padding: theme.spacing(3),\r\n    backgroundColor: \"#3f3f3f0d\",\r\n  }),\r\n  title: {\r\n    margin: `${theme.spacing(2)}px 0 12px ${theme.spacing(1)}px`,\r\n    color: theme.palette.openTitle,\r\n  },\r\n}));\r\n\r\nexport default function MyOrders() {\r\n  const classes = useStyles();\r\n  const orders = useSelector((s) => s.bills);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(getTotalBills());\r\n    return () => {\r\n      dispatch(resetBills());\r\n    };\r\n  }, []);\r\n  return (\r\n    <Paper className={classes.root} elevation={4}>\r\n      <Typography type=\"title\" className={classes.title}>\r\n        Your Orders\r\n      </Typography>\r\n      <List dense>\r\n        {orders.map((order, i) => {\r\n          return (\r\n            <span key={i}>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/order/\" + order.id,\r\n                  state: {order}\r\n                }}\r\n              >\r\n                <ListItem button>\r\n                  <ListItemText\r\n                    primary={<strong>{\"Order # \" + order.id}</strong>}\r\n                    secondary={moment(order.created_at).format(\"MM/DD/YYYY HH:mm\")}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n              <Divider />\r\n            </span>\r\n          );\r\n        })}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\user\\DeleteUser.js",["412","413","414"],"import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteUser } from '../../redux/auth'\r\n\r\nexport default function DeleteUser(props) {\r\n  const [open, setOpen] = useState(false)\r\n  const [redirect, setRedirect] = useState(false)\r\n  const clickButton = () => {\r\n    setOpen(true)\r\n  }\r\n  const deleteAccount = () => { \r\n    props.onRemove()\r\n    setOpen(false)\r\n  }\r\n  const handleRequestClose = () => {\r\n    setOpen(false)\r\n  }\r\n  \r\n  if (redirect) {\r\n    return <Redirect to='/'/>\r\n  }\r\n    return (<span>\r\n      <IconButton aria-label=\"Delete\" onClick={clickButton} color=\"secondary\">\r\n        <DeleteIcon style={{fill: 'red'}}/>\r\n      </IconButton>\r\n\r\n      <Dialog open={open} onClose={handleRequestClose}>\r\n        <DialogTitle>{\"Delete Account\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Confirm to delete your account.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleRequestClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deleteAccount} color=\"secondary\" autoFocus=\"autoFocus\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </span>)\r\n\r\n}\r\nDeleteUser.propTypes = {\r\n  userId: PropTypes.string.isRequired\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\Categories.js",["415","416","417","418","419"],"import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport Products from './Products'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    background: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    width:'100%',\r\n    transform: 'translateZ(0)',\r\n  },\r\n  tileTitle: {\r\n    verticalAlign: 'middle',\r\n    lineHeight: 2.5,\r\n    textAlign: 'center',\r\n    fontSize: '1.35em',\r\n    margin: '0 4px 0 0',\r\n  },\r\n  card: {\r\n    margin: 'auto',\r\n    marginTop: 20\r\n  },\r\n  title: {\r\n    padding:`${theme.spacing(3)}px ${theme.spacing(2.5)}px ${theme.spacing(2)}px`,\r\n    color: theme.palette.openTitle,\r\n    backgroundColor: '#80808024',\r\n    fontSize: '1.1em'\r\n  },\r\n  icon: {\r\n    verticalAlign: 'sub',\r\n    color: '#738272',\r\n    fontSize: '0.9em'\r\n  },\r\n  link: {\r\n    color: '#4d6538',\r\n    textShadow: '0px 2px 12px #ffffff',\r\n    cursor:'pointer'\r\n  }\r\n}))\r\n\r\nexport default function Categories(props){\r\n  const classes = useStyles()\r\n  const [products, setProducts] = useState([])\r\n  const [selected, setSelected] = useState(props.categories[0])\r\n\r\n  const listbyCategory = category => event => {\r\n\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <Card className={classes.card}>\r\n          <Typography type=\"title\" className={classes.title}>\r\n            Explore by category\r\n          </Typography>\r\n          <div className={classes.root}>\r\n            <GridList className={classes.gridList} cols={4}>\r\n              {props.categories.map((tile, i) => (\r\n                <GridListTile key={i} className={classes.tileTitle} style={{height: '64px', backgroundColor: selected == tile? 'rgba(95, 139, 137, 0.56)':'rgba(95, 124, 139, 0.32)'}}>\r\n                  <span className={classes.link} onClick={listbyCategory(tile)}>{tile}  <Icon className={classes.icon}>{selected == tile && 'arrow_drop_down'}</Icon></span>\r\n                </GridListTile>\r\n              ))}\r\n            </GridList>\r\n          </div>\r\n          <Divider/>\r\n          <Products products={products} searched={false}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n}\r\nCategories.propTypes = {\r\n  categories: PropTypes.array.isRequired\r\n}\r\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\Search.js",["420"],"import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport Products from './Products'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    paddingTop: 10,\r\n    backgroundColor: '#80808024'\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 130,\r\n    verticalAlign: 'bottom',\r\n    marginBottom: '20px'\r\n  },\r\n  searchField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 300,\r\n    marginBottom: '20px'\r\n  },\r\n  searchButton: {\r\n    minWidth: '20px',\r\n    height: '30px',\r\n    padding: '0 8px',\r\n    marginBottom: '20px'\r\n  }\r\n}))\r\n\r\nexport default function Search(props) {\r\n  const classes = useStyles()\r\n  const [values, setValues] = useState({\r\n      category: '',\r\n      search: '',\r\n      results: [],\r\n      searched: false\r\n  })\r\n  const handleChange = name => event => {\r\n    setValues({\r\n      ...values, [name]: event.target.value,\r\n    })\r\n  }\r\n  const search = () => {\r\n    if(values.search){\r\n    }\r\n  }\r\n  const enterKey = (event) => {\r\n    if(event.keyCode == 13){\r\n      event.preventDefault()\r\n      search()\r\n    }\r\n  }\r\n    return (\r\n      <div>\r\n        <Card className={classes.card}>\r\n          <TextField\r\n            id=\"select-category\"\r\n            select\r\n            label=\"Select category\"\r\n            className={classes.textField}\r\n            value={values.category}\r\n            onChange={handleChange('category')}\r\n            SelectProps={{\r\n              MenuProps: {\r\n                className: classes.menu,\r\n              },\r\n            }}\r\n            margin=\"normal\">\r\n            <MenuItem value=\"All\">\r\n              All\r\n            </MenuItem>\r\n            { props.categories.map(option => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            id=\"search\"\r\n            label=\"Search products\"\r\n            type=\"search\"\r\n            onKeyDown={enterKey}\r\n            onChange={handleChange('search')}\r\n            className={classes.searchField}\r\n            margin=\"normal\"\r\n          />\r\n          <Button variant=\"contained\" color={'primary'} className={classes.searchButton} onClick={search}>\r\n            <SearchIcon/>\r\n          </Button>\r\n          <Divider/>\r\n          <Products products={[]} searched={values.searched}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n}\r\nSearch.propTypes = {\r\n  categories: PropTypes.array.isRequired\r\n}","D:\\code\\Du_an\\frontend\\src\\components\\product\\DeleteProduct.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\bells.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\emitter.js",[],{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","severity":1,"message":"426","line":3,"column":8,"nodeType":"427","messageId":"428","endLine":3,"endColumn":12},{"ruleId":"429","severity":1,"message":"430","line":32,"column":6,"nodeType":"431","endLine":32,"endColumn":8,"suggestions":"432"},{"ruleId":"425","severity":1,"message":"433","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":18},{"ruleId":"425","severity":1,"message":"434","line":3,"column":22,"nodeType":"427","messageId":"428","endLine":3,"endColumn":30},{"ruleId":"425","severity":1,"message":"435","line":5,"column":8,"nodeType":"427","messageId":"428","endLine":5,"endColumn":18},{"ruleId":"425","severity":1,"message":"436","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"437","line":9,"column":16,"nodeType":"427","messageId":"428","endLine":9,"endColumn":26},{"ruleId":"425","severity":1,"message":"438","line":14,"column":10,"nodeType":"427","messageId":"428","endLine":14,"endColumn":18},{"ruleId":"439","severity":1,"message":"440","line":17,"column":33,"nodeType":"441","messageId":"442","endLine":17,"endColumn":35},{"ruleId":"429","severity":1,"message":"443","line":40,"column":6,"nodeType":"431","endLine":40,"endColumn":8,"suggestions":"444"},{"ruleId":"425","severity":1,"message":"445","line":16,"column":10,"nodeType":"427","messageId":"428","endLine":16,"endColumn":26},{"ruleId":"425","severity":1,"message":"446","line":16,"column":28,"nodeType":"427","messageId":"428","endLine":16,"endColumn":34},{"ruleId":"425","severity":1,"message":"447","line":68,"column":9,"nodeType":"427","messageId":"428","endLine":68,"endColumn":16},{"ruleId":"425","severity":1,"message":"448","line":74,"column":9,"nodeType":"427","messageId":"428","endLine":74,"endColumn":20},{"ruleId":"425","severity":1,"message":"449","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":18},{"ruleId":"425","severity":1,"message":"450","line":21,"column":27,"nodeType":"427","messageId":"428","endLine":21,"endColumn":45},{"ruleId":"425","severity":1,"message":"451","line":22,"column":23,"nodeType":"427","messageId":"428","endLine":22,"endColumn":37},{"ruleId":"429","severity":1,"message":"430","line":28,"column":6,"nodeType":"431","endLine":28,"endColumn":8,"suggestions":"452"},{"ruleId":"425","severity":1,"message":"445","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":24},{"ruleId":"425","severity":1,"message":"446","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":14},{"ruleId":"429","severity":1,"message":"453","line":83,"column":5,"nodeType":"431","endLine":83,"endColumn":7,"suggestions":"454"},{"ruleId":"425","severity":1,"message":"455","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"456","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":18},{"ruleId":"425","severity":1,"message":"457","line":43,"column":28,"nodeType":"427","messageId":"428","endLine":43,"endColumn":47},{"ruleId":"425","severity":1,"message":"455","line":1,"column":26,"nodeType":"427","messageId":"428","endLine":1,"endColumn":35},{"ruleId":"425","severity":1,"message":"458","line":5,"column":8,"nodeType":"427","messageId":"428","endLine":5,"endColumn":19},{"ruleId":"425","severity":1,"message":"459","line":27,"column":18,"nodeType":"427","messageId":"428","endLine":27,"endColumn":27},{"ruleId":"425","severity":1,"message":"460","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":26},{"ruleId":"425","severity":1,"message":"461","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":21},{"ruleId":"425","severity":1,"message":"462","line":6,"column":8,"nodeType":"427","messageId":"428","endLine":6,"endColumn":18},{"ruleId":"425","severity":1,"message":"461","line":12,"column":23,"nodeType":"427","messageId":"428","endLine":12,"endColumn":34},{"ruleId":"425","severity":1,"message":"463","line":13,"column":20,"nodeType":"427","messageId":"428","endLine":13,"endColumn":34},{"ruleId":"425","severity":1,"message":"464","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":22},{"ruleId":"429","severity":1,"message":"430","line":59,"column":6,"nodeType":"431","endLine":59,"endColumn":8,"suggestions":"465"},{"ruleId":"429","severity":1,"message":"466","line":72,"column":6,"nodeType":"431","endLine":72,"endColumn":19,"suggestions":"467"},{"ruleId":"425","severity":1,"message":"468","line":12,"column":10,"nodeType":"427","messageId":"428","endLine":12,"endColumn":18},{"ruleId":"425","severity":1,"message":"464","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":22},{"ruleId":"425","severity":1,"message":"469","line":54,"column":10,"nodeType":"427","messageId":"428","endLine":54,"endColumn":15},{"ruleId":"425","severity":1,"message":"470","line":54,"column":17,"nodeType":"427","messageId":"428","endLine":54,"endColumn":25},{"ruleId":"429","severity":1,"message":"443","line":99,"column":6,"nodeType":"431","endLine":99,"endColumn":13,"suggestions":"471"},{"ruleId":"425","severity":1,"message":"447","line":101,"column":9,"nodeType":"427","messageId":"428","endLine":101,"endColumn":16},{"ruleId":"425","severity":1,"message":"472","line":1,"column":38,"nodeType":"427","messageId":"428","endLine":1,"endColumn":48},{"ruleId":"425","severity":1,"message":"457","line":48,"column":28,"nodeType":"427","messageId":"428","endLine":48,"endColumn":47},{"ruleId":"429","severity":1,"message":"430","line":52,"column":6,"nodeType":"431","endLine":52,"endColumn":8,"suggestions":"473"},{"ruleId":"425","severity":1,"message":"462","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":18},{"ruleId":"429","severity":1,"message":"474","line":106,"column":6,"nodeType":"431","endLine":106,"endColumn":8,"suggestions":"475"},{"ruleId":"429","severity":1,"message":"476","line":120,"column":5,"nodeType":"431","endLine":120,"endColumn":18,"suggestions":"477"},{"ruleId":"425","severity":1,"message":"447","line":121,"column":9,"nodeType":"427","messageId":"428","endLine":121,"endColumn":16},{"ruleId":"425","severity":1,"message":"462","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":18},{"ruleId":"425","severity":1,"message":"478","line":11,"column":10,"nodeType":"427","messageId":"428","endLine":11,"endColumn":23},{"ruleId":"429","severity":1,"message":"479","line":91,"column":6,"nodeType":"431","endLine":91,"endColumn":8,"suggestions":"480"},{"ruleId":"429","severity":1,"message":"476","line":100,"column":6,"nodeType":"431","endLine":100,"endColumn":13,"suggestions":"481"},{"ruleId":"425","severity":1,"message":"455","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"482","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"483","line":9,"column":10,"nodeType":"427","messageId":"428","endLine":9,"endColumn":14},{"ruleId":"425","severity":1,"message":"484","line":13,"column":10,"nodeType":"427","messageId":"428","endLine":13,"endColumn":17},{"ruleId":"425","severity":1,"message":"485","line":17,"column":3,"nodeType":"427","messageId":"428","endLine":17,"endColumn":16},{"ruleId":"429","severity":1,"message":"486","line":128,"column":6,"nodeType":"431","endLine":128,"endColumn":8,"suggestions":"487"},{"ruleId":"429","severity":1,"message":"488","line":131,"column":6,"nodeType":"431","endLine":131,"endColumn":8,"suggestions":"489"},{"ruleId":"425","severity":1,"message":"485","line":15,"column":10,"nodeType":"427","messageId":"428","endLine":15,"endColumn":23},{"ruleId":"425","severity":1,"message":"451","line":67,"column":23,"nodeType":"427","messageId":"428","endLine":67,"endColumn":37},{"ruleId":"425","severity":1,"message":"469","line":68,"column":10,"nodeType":"427","messageId":"428","endLine":68,"endColumn":15},{"ruleId":"425","severity":1,"message":"470","line":68,"column":17,"nodeType":"427","messageId":"428","endLine":68,"endColumn":25},{"ruleId":"429","severity":1,"message":"479","line":80,"column":6,"nodeType":"431","endLine":80,"endColumn":8,"suggestions":"490"},{"ruleId":"425","severity":1,"message":"491","line":14,"column":10,"nodeType":"427","messageId":"428","endLine":14,"endColumn":20},{"ruleId":"429","severity":1,"message":"488","line":53,"column":6,"nodeType":"431","endLine":53,"endColumn":8,"suggestions":"492"},{"ruleId":"439","severity":1,"message":"440","line":86,"column":25,"nodeType":"441","messageId":"442","endLine":86,"endColumn":27},{"ruleId":"439","severity":1,"message":"440","line":91,"column":28,"nodeType":"441","messageId":"442","endLine":91,"endColumn":30},{"ruleId":"425","severity":1,"message":"493","line":8,"column":8,"nodeType":"427","messageId":"428","endLine":8,"endColumn":16},{"ruleId":"425","severity":1,"message":"494","line":9,"column":8,"nodeType":"427","messageId":"428","endLine":9,"endColumn":17},{"ruleId":"425","severity":1,"message":"495","line":13,"column":10,"nodeType":"427","messageId":"428","endLine":13,"endColumn":26},{"ruleId":"425","severity":1,"message":"496","line":14,"column":8,"nodeType":"427","messageId":"428","endLine":14,"endColumn":13},{"ruleId":"425","severity":1,"message":"468","line":15,"column":3,"nodeType":"427","messageId":"428","endLine":15,"endColumn":11},{"ruleId":"425","severity":1,"message":"497","line":17,"column":3,"nodeType":"427","messageId":"428","endLine":17,"endColumn":13},{"ruleId":"425","severity":1,"message":"459","line":51,"column":18,"nodeType":"427","messageId":"428","endLine":51,"endColumn":27},{"ruleId":"429","severity":1,"message":"498","line":64,"column":6,"nodeType":"431","endLine":64,"endColumn":8,"suggestions":"499"},{"ruleId":"425","severity":1,"message":"461","line":8,"column":10,"nodeType":"427","messageId":"428","endLine":8,"endColumn":21},{"ruleId":"425","severity":1,"message":"500","line":1,"column":10,"nodeType":"427","messageId":"428","endLine":1,"endColumn":13},{"ruleId":"425","severity":1,"message":"501","line":3,"column":10,"nodeType":"427","messageId":"428","endLine":3,"endColumn":24},{"ruleId":"425","severity":1,"message":"502","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":28},{"ruleId":"425","severity":1,"message":"501","line":21,"column":10,"nodeType":"427","messageId":"428","endLine":21,"endColumn":24},{"ruleId":"425","severity":1,"message":"503","line":40,"column":11,"nodeType":"427","messageId":"428","endLine":40,"endColumn":17},{"ruleId":"425","severity":1,"message":"503","line":49,"column":11,"nodeType":"427","messageId":"428","endLine":49,"endColumn":17},{"ruleId":"425","severity":1,"message":"500","line":1,"column":10,"nodeType":"427","messageId":"428","endLine":1,"endColumn":13},{"ruleId":"425","severity":1,"message":"504","line":42,"column":22,"nodeType":"427","messageId":"428","endLine":42,"endColumn":26},{"ruleId":"425","severity":1,"message":"505","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":22},{"ruleId":"506","severity":1,"message":"507","line":51,"column":11,"nodeType":"508","messageId":"442","endLine":51,"endColumn":13},{"ruleId":"425","severity":1,"message":"482","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"455","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"509","line":8,"column":23,"nodeType":"427","messageId":"428","endLine":8,"endColumn":34},{"ruleId":"425","severity":1,"message":"510","line":10,"column":8,"nodeType":"427","messageId":"428","endLine":10,"endColumn":12},{"ruleId":"425","severity":1,"message":"459","line":42,"column":18,"nodeType":"427","messageId":"428","endLine":42,"endColumn":27},{"ruleId":"425","severity":1,"message":"483","line":8,"column":10,"nodeType":"427","messageId":"428","endLine":8,"endColumn":14},{"ruleId":"425","severity":1,"message":"463","line":9,"column":10,"nodeType":"427","messageId":"428","endLine":9,"endColumn":24},{"ruleId":"425","severity":1,"message":"482","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"463","line":19,"column":10,"nodeType":"427","messageId":"428","endLine":19,"endColumn":24},{"ruleId":"429","severity":1,"message":"511","line":59,"column":6,"nodeType":"431","endLine":59,"endColumn":8,"suggestions":"512"},{"ruleId":"425","severity":1,"message":"513","line":15,"column":9,"nodeType":"427","messageId":"428","endLine":15,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":70,"column":6,"nodeType":"431","endLine":70,"endColumn":8,"suggestions":"514"},{"ruleId":"425","severity":1,"message":"482","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"515","line":30,"column":9,"nodeType":"427","messageId":"428","endLine":30,"endColumn":16},{"ruleId":"429","severity":1,"message":"430","line":36,"column":6,"nodeType":"431","endLine":36,"endColumn":8,"suggestions":"516"},{"ruleId":"425","severity":1,"message":"509","line":12,"column":10,"nodeType":"427","messageId":"428","endLine":12,"endColumn":21},{"ruleId":"425","severity":1,"message":"517","line":13,"column":10,"nodeType":"427","messageId":"428","endLine":13,"endColumn":20},{"ruleId":"425","severity":1,"message":"518","line":17,"column":20,"nodeType":"427","messageId":"428","endLine":17,"endColumn":31},{"ruleId":"425","severity":1,"message":"455","line":1,"column":26,"nodeType":"427","messageId":"428","endLine":1,"endColumn":35},{"ruleId":"425","severity":1,"message":"519","line":56,"column":20,"nodeType":"427","messageId":"428","endLine":56,"endColumn":31},{"ruleId":"425","severity":1,"message":"520","line":57,"column":20,"nodeType":"427","messageId":"428","endLine":57,"endColumn":31},{"ruleId":"439","severity":1,"message":"440","line":72,"column":119,"nodeType":"441","messageId":"442","endLine":72,"endColumn":121},{"ruleId":"439","severity":1,"message":"440","line":73,"column":130,"nodeType":"441","messageId":"442","endLine":73,"endColumn":132},{"ruleId":"439","severity":1,"message":"440","line":61,"column":22,"nodeType":"441","messageId":"442","endLine":61,"endColumn":24},"no-native-reassign",["521"],"no-negated-in-lhs",["522"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["523"],"'BASE_URL' is defined but never used.","'showNoti' is defined but never used.","'IconButton' is defined but never used.","'HomeIcon' is defined but never used.","'useHistory' is defined but never used.","'getToken' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'auth.email' and 'dispatch'. Either include them or remove the dependency array.",["524"],"'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'logoUrl' is assigned a value but never used.","'handleCheck' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'setSuggestionTitle' is assigned a value but never used.","'setSuggestions' is assigned a value but never used.",["525"],"React Hook useEffect has missing dependencies: 'auth.address', 'auth.email', 'auth.img_url', 'auth.name', 'auth.phone', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["526"],"'useEffect' is defined but never used.","'DeleteUser' is defined but never used.","'setRedirectToSignin' is assigned a value but never used.","'queryString' is defined but never used.","'setValues' is assigned a value but never used.","'Component' is defined but never used.","'useSelector' is defined but never used.","'FileUpload' is defined but never used.","'DEFAULT_AVATAR' is defined but never used.","'StarBorderIcon' is defined but never used.",["527"],"React Hook useEffect has a missing dependency: 'rates'. Either include it or remove the dependency array. You can also do a functional update 'setRates(r => ...)' if you only need 'rates' in the 'setRates' call.",["528"],"'getFoods' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["529"],"'useReducer' is defined but never used.",["530"],"React Hook useEffect has missing dependencies: 'dispatch' and 'resId'. Either include them or remove the dependency array.",["531"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["532"],"'DEFAULT_IMAGE' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'match.params.foodId', and 'match.params.resId'. Either include them or remove the dependency array.",["533"],["534"],"'useState' is defined but never used.","'Link' is defined but never used.","'getBill' is defined but never used.","'getRestaurant' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order'. Either include them or remove the dependency array.",["535"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.resId'. Either include them or remove the dependency array.",["536"],["537"],"'deleteBill' is defined but never used.",["538"],"'MenuItem' is defined but never used.","'TextField' is defined but never used.","'resetBillDetails' is defined but never used.","'foods' is defined but never used.","'resetFoods' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.order.id', and 'props.shopId'. Either include them or remove the dependency array.",["539"],"'all' is defined but never used.","'notifyErrorMsg' is defined but never used.","'DELETE_RESTAURANT_SUCCESS' is defined but never used.","'result' is assigned a value but never used.","'data' is assigned a value but never used.","'DELETE_FOOD_SUCCESS' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'useDispatch' is defined but never used.","'auth' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.shopId'. Either include them or remove the dependency array.",["540"],"'auth' is assigned a value but never used.",["541"],"'history' is assigned a value but never used.",["542"],"'deleteUser' is defined but never used.","'setRedirect' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'setSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"543","fix":"547"},{"desc":"548","fix":"549"},{"desc":"543","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"543","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"560","fix":"568"},{"desc":"566","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"543","fix":"574"},{"desc":"543","fix":"575"},"Update the dependencies array to be: [dispatch]",{"range":"576","text":"577"},"Update the dependencies array to be: [auth.email, dispatch]",{"range":"578","text":"579"},{"range":"580","text":"577"},"Update the dependencies array to be: [auth.address, auth.email, auth.img_url, auth.name, auth.phone, values]",{"range":"581","text":"582"},{"range":"583","text":"577"},"Update the dependencies array to be: [rates, restaurants]",{"range":"584","text":"585"},"Update the dependencies array to be: [auth.email, dispatch, resId]",{"range":"586","text":"587"},{"range":"588","text":"577"},"Update the dependencies array to be: [dispatch, resId]",{"range":"589","text":"590"},"Update the dependencies array to be: [restaurants, values]",{"range":"591","text":"592"},"Update the dependencies array to be: [dispatch, match.params.foodId, match.params.resId]",{"range":"593","text":"594"},"Update the dependencies array to be: [foods, values]",{"range":"595","text":"596"},"Update the dependencies array to be: [dispatch, order]",{"range":"597","text":"598"},"Update the dependencies array to be: [dispatch, match.params.resId]",{"range":"599","text":"600"},{"range":"601","text":"594"},{"range":"602","text":"600"},"Update the dependencies array to be: [dispatch, props.order.id, props.shopId]",{"range":"603","text":"604"},"Update the dependencies array to be: [dispatch, props.shopId]",{"range":"605","text":"606"},{"range":"607","text":"577"},{"range":"608","text":"577"},[1379,1381],"[dispatch]",[1598,1600],"[auth.email, dispatch]",[926,928],[2427,2429],"[auth.address, auth.email, auth.img_url, auth.name, auth.phone, values]",[1968,1970],[2332,2345],"[rates, restaurants]",[3063,3070],"[auth.email, dispatch, resId]",[1902,1904],[2817,2819],"[dispatch, resId]",[3224,3237],"[restaurants, values]",[2450,2452],"[dispatch, match.params.foodId, match.params.resId]",[2660,2667],"[foods, values]",[3356,3358],"[dispatch, order]",[3444,3446],"[dispatch, match.params.resId]",[2226,2228],[1870,1872],[1815,1817],"[dispatch, props.order.id, props.shopId]",[1866,1868],"[dispatch, props.shopId]",[1931,1933],[1250,1252]]