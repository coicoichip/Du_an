[{"D:\\code\\Du_an\\frontend\\src\\index.js":"1","D:\\code\\Du_an\\frontend\\src\\App.js":"2","D:\\code\\Du_an\\frontend\\src\\MainRouter.js":"3","D:\\code\\Du_an\\frontend\\src\\theme.js":"4","D:\\code\\Du_an\\frontend\\src\\components\\user\\Signup.js":"5","D:\\code\\Du_an\\frontend\\src\\components\\core\\Menu.js":"6","D:\\code\\Du_an\\frontend\\src\\components\\core\\Home.js":"7","D:\\code\\Du_an\\frontend\\src\\components\\user\\Users.js":"8","D:\\code\\Du_an\\frontend\\src\\components\\user\\EditProfile.js":"9","D:\\code\\Du_an\\frontend\\src\\components\\user\\StripeConnect.js":"10","D:\\code\\Du_an\\frontend\\src\\components\\user\\Profile.js":"11","D:\\code\\Du_an\\frontend\\src\\components\\shop\\NewShop.js":"12","D:\\code\\Du_an\\frontend\\src\\components\\auth\\Signin.js":"13","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Shops.js":"14","D:\\code\\Du_an\\frontend\\src\\components\\auth\\PrivateRoute.js":"15","D:\\code\\Du_an\\frontend\\src\\components\\product\\EditProduct.js":"16","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Shop.js":"17","D:\\code\\Du_an\\frontend\\src\\components\\shop\\MyShops.js":"18","D:\\code\\Du_an\\frontend\\src\\components\\shop\\EditShop.js":"19","D:\\code\\Du_an\\frontend\\src\\components\\product\\NewProduct.js":"20","D:\\code\\Du_an\\frontend\\src\\components\\cart\\Cart.js":"21","D:\\code\\Du_an\\frontend\\src\\components\\product\\Product.js":"22","D:\\code\\Du_an\\frontend\\src\\components\\order\\Order.js":"23","D:\\code\\Du_an\\frontend\\src\\components\\order\\ShopOrders.js":"24","D:\\code\\Du_an\\frontend\\src\\components\\product\\api-product.js":"25","D:\\code\\Du_an\\frontend\\src\\components\\user\\api-user.js":"26","D:\\code\\Du_an\\frontend\\src\\components\\auth\\auth-helper.js":"27","D:\\code\\Du_an\\frontend\\src\\components\\cart\\cart-helper.js":"28","D:\\code\\Du_an\\frontend\\src\\components\\product\\Suggestions.js":"29","D:\\code\\Du_an\\frontend\\src\\components\\product\\Search.js":"30","D:\\code\\Du_an\\frontend\\src\\components\\product\\Categories.js":"31","D:\\code\\Du_an\\frontend\\src\\components\\order\\api-order.js":"32","D:\\code\\Du_an\\frontend\\src\\components\\order\\ProductOrderEdit.js":"33","D:\\code\\Du_an\\frontend\\src\\components\\auth\\api-auth.js":"34","D:\\code\\Du_an\\frontend\\src\\components\\cart\\Checkout.js":"35","D:\\code\\Du_an\\frontend\\src\\components\\cart\\AddToCart.js":"36","D:\\code\\Du_an\\frontend\\src\\components\\cart\\CartItems.js":"37","D:\\code\\Du_an\\frontend\\src\\components\\product\\Products.js":"38","D:\\code\\Du_an\\frontend\\src\\components\\shop\\api-shop.js":"39","D:\\code\\Du_an\\frontend\\src\\components\\shop\\DeleteShop.js":"40","D:\\code\\Du_an\\frontend\\src\\components\\product\\MyProducts.js":"41","D:\\code\\Du_an\\frontend\\src\\components\\order\\MyOrders.js":"42","D:\\code\\Du_an\\frontend\\src\\components\\user\\DeleteUser.js":"43","D:\\code\\Du_an\\frontend\\src\\components\\cart\\PlaceOrder.js":"44","D:\\code\\Du_an\\frontend\\src\\components\\product\\DeleteProduct.js":"45","D:\\code\\Du_an\\frontend\\src\\redux\\auth.js":"46","D:\\code\\Du_an\\frontend\\src\\redux\\index.js":"47","D:\\code\\Du_an\\frontend\\src\\saga\\index.js":"48","D:\\code\\Du_an\\frontend\\src\\saga\\auth.js":"49"},{"size":146,"mtime":1608360958490,"results":"50","hashOfConfig":"51"},{"size":701,"mtime":1608363682426,"results":"52","hashOfConfig":"51"},{"size":2337,"mtime":1608361029112,"results":"53","hashOfConfig":"51"},{"size":542,"mtime":1608360909992,"results":"54","hashOfConfig":"51"},{"size":3585,"mtime":1608360885544,"results":"55","hashOfConfig":"51"},{"size":3328,"mtime":1608363674663,"results":"56","hashOfConfig":"51"},{"size":1792,"mtime":1608360885442,"results":"57","hashOfConfig":"51"},{"size":2320,"mtime":1608360885545,"results":"58","hashOfConfig":"51"},{"size":4559,"mtime":1608360885543,"results":"59","hashOfConfig":"51"},{"size":2588,"mtime":1608360885545,"results":"60","hashOfConfig":"51"},{"size":3167,"mtime":1608364749676,"results":"61","hashOfConfig":"51"},{"size":3894,"mtime":1608360885517,"results":"62","hashOfConfig":"51"},{"size":3068,"mtime":1608364594349,"results":"63","hashOfConfig":"51"},{"size":2625,"mtime":1608360885521,"results":"64","hashOfConfig":"51"},{"size":443,"mtime":1608360885394,"results":"65","hashOfConfig":"51"},{"size":5795,"mtime":1608360885486,"results":"66","hashOfConfig":"51"},{"size":3357,"mtime":1608360885520,"results":"67","hashOfConfig":"51"},{"size":3912,"mtime":1608360885516,"results":"68","hashOfConfig":"51"},{"size":5351,"mtime":1608360885515,"results":"69","hashOfConfig":"51"},{"size":4758,"mtime":1608360885488,"results":"70","hashOfConfig":"51"},{"size":833,"mtime":1608361094402,"results":"71","hashOfConfig":"51"},{"size":4181,"mtime":1608360885488,"results":"72","hashOfConfig":"51"},{"size":6510,"mtime":1608360885462,"results":"73","hashOfConfig":"51"},{"size":3841,"mtime":1608360885464,"results":"74","hashOfConfig":"51"},{"size":2779,"mtime":1608360885491,"results":"75","hashOfConfig":"51"},{"size":2350,"mtime":1608360885546,"results":"76","hashOfConfig":"51"},{"size":212,"mtime":1608362304790,"results":"77","hashOfConfig":"51"},{"size":1519,"mtime":1608360885424,"results":"78","hashOfConfig":"51"},{"size":3995,"mtime":1608360885490,"results":"79","hashOfConfig":"51"},{"size":3172,"mtime":1608360885490,"results":"80","hashOfConfig":"51"},{"size":3156,"mtime":1608360885485,"results":"81","hashOfConfig":"51"},{"size":3172,"mtime":1608360885464,"results":"82","hashOfConfig":"51"},{"size":6025,"mtime":1608360885463,"results":"83","hashOfConfig":"51"},{"size":582,"mtime":1608361736873,"results":"84","hashOfConfig":"51"},{"size":3935,"mtime":1608361180999,"results":"85","hashOfConfig":"51"},{"size":1399,"mtime":1608360885420,"results":"86","hashOfConfig":"51"},{"size":5756,"mtime":1608360885422,"results":"87","hashOfConfig":"51"},{"size":2451,"mtime":1608360885489,"results":"88","hashOfConfig":"51"},{"size":1989,"mtime":1608360885522,"results":"89","hashOfConfig":"51"},{"size":1923,"mtime":1608360885514,"results":"90","hashOfConfig":"51"},{"size":3914,"mtime":1608360885487,"results":"91","hashOfConfig":"51"},{"size":2033,"mtime":1608364645750,"results":"92","hashOfConfig":"51"},{"size":2041,"mtime":1608360885542,"results":"93","hashOfConfig":"51"},{"size":2549,"mtime":1608361204735,"results":"94","hashOfConfig":"51"},{"size":2028,"mtime":1608360885486,"results":"95","hashOfConfig":"51"},{"size":578,"mtime":1608364610453,"results":"96","hashOfConfig":"51"},{"size":582,"mtime":1608361982652,"results":"97","hashOfConfig":"51"},{"size":171,"mtime":1608363847077,"results":"98","hashOfConfig":"51"},{"size":272,"mtime":1608364510225,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1jl9czb",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\code\\Du_an\\frontend\\src\\index.js",[],["217","218"],"D:\\code\\Du_an\\frontend\\src\\App.js",[],"D:\\code\\Du_an\\frontend\\src\\MainRouter.js",[],"D:\\code\\Du_an\\frontend\\src\\theme.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\user\\Signup.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\core\\Menu.js",["219","220","221"],"D:\\code\\Du_an\\frontend\\src\\components\\core\\Home.js",["222"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Suggestions from './../product/Suggestions'\nimport {listLatest, listCategories} from './../product/api-product.js'\nimport Search from './../product/Search'\nimport Categories from './../product/Categories'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 30,\n  }\n}))\n\n\nexport default function Home(){\n  const classes = useStyles()\n  const [suggestionTitle, setSuggestionTitle] = useState(\"Latest Products\")\n  const [categories, setCategories] = useState([])\n  const [suggestions, setSuggestions] = useState([])\n  \n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    listLatest(signal).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setSuggestions(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    listCategories(signal).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setCategories(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={8} sm={8}>\n            <Search categories={categories}/>\n            <Categories categories={categories}/>\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Suggestions products={suggestions} title={suggestionTitle}/>\n          </Grid>\n        </Grid>\n      </div>\n    )\n}\n\n\n","D:\\code\\Du_an\\frontend\\src\\components\\user\\Users.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\user\\EditProfile.js",["223"],"import React, {useState, useEffect} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport { makeStyles } from '@material-ui/core/styles'\nimport auth from './../auth/auth-helper'\nimport {read, update} from './api-user.js'\nimport {Redirect} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: theme.spacing(5),\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle\n  },\n  error: {\n    verticalAlign: 'middle'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing(2)\n  },\n  subheading: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.openTitle\n  }\n}))\n\nexport default function EditProfile({ match }) {\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      name: '',\n      email: '',\n      password: '',\n      seller: false,\n      redirectToProfile: false,\n      error: ''\n  })\n  const jwt = auth.isAuthenticated()\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    read({\n      userId: match.params.userId\n    }, {t: jwt.token}, signal).then((data) => {\n      if (data && data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, name: data.name, email: data.email, seller: data.seller})\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n\n  }, [match.params.userId])\n\n  const clickSubmit = () => {\n    const user = {\n      name: values.name || undefined,\n      email: values.email || undefined,\n      password: values.password || undefined,\n      seller: values.seller || undefined\n    }\n    update({\n      userId: match.params.userId\n    }, {\n      t: jwt.token\n    }, user).then((data) => {\n      if (data && data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        auth.updateUser(data, ()=>{\n          setValues({...values, userId: data._id, redirectToProfile: true})\n        })\n      }\n    })\n  }\n  const handleChange = name => event => {\n    setValues({...values, [name]: event.target.value})\n  }\n  const handleCheck = (event, checked) => {\n    setValues({...values, 'seller': checked})\n  }\n\n  if (values.redirectToProfile) {\n    return (<Redirect to={'/user/' + values.userId}/>)\n  }\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h6\" className={classes.title}>\n            Edit Profile\n          </Typography>\n          <TextField id=\"name\" label=\"Name\" className={classes.textField} value={values.name} onChange={handleChange('name')} margin=\"normal\"/><br/>\n          <TextField id=\"email\" type=\"email\" label=\"Email\" className={classes.textField} value={values.email} onChange={handleChange('email')} margin=\"normal\"/><br/>\n          <TextField id=\"password\" type=\"password\" label=\"Password\" className={classes.textField} value={values.password} onChange={handleChange('password')} margin=\"normal\"/>\n          <Typography variant=\"subtitle1\" className={classes.subheading}>\n            Seller Account\n          </Typography>\n          <FormControlLabel\n            control={\n              <Switch classes={{\n                                checked: classes.checked,\n                                bar: classes.bar,\n                              }}\n                      checked={values.seller}\n                      onChange={handleCheck}\n              />}\n            label={values.seller? 'Active' : 'Inactive'}\n          />\n          <br/> {\n            values.error && (<Typography component=\"p\" color=\"error\">\n              <Icon color=\"error\" className={classes.error}>error</Icon>\n              {values.error}\n            </Typography>)\n          }\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" variant=\"contained\" onClick={clickSubmit} className={classes.submit}>Submit</Button>\n        </CardActions>\n      </Card>\n    )\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\user\\StripeConnect.js",["224"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport queryString from 'query-string'\nimport {stripeUpdate} from './api-user.js'\nimport auth from './../auth/auth-helper'\n\nconst useStyles = makeStyles(theme => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(5)\n  }),\n  title: {\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(2)}px ${theme.spacing(2)}px`,\n    color: theme.palette.protectedTitle,\n    fontSize: '1.1em'\n  },\n  subheading: {\n    color: theme.palette.openTitle,\n    marginLeft: \"24px\"\n  }\n}))\n\nexport default function StripeConnect(props){\n  const classes = useStyles()\n  const [values, setValues] = useState({\n    error: false,\n    connecting: false,\n    connected: false\n  })\n  const jwt = auth.isAuthenticated()\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    const parsed = queryString.parse(props.location.search)\n    if(parsed.error){\n      setValues({...values, error: true})\n    }\n    if(parsed.code){\n      setValues({...values, connecting: true, error: false})\n      //post call to stripe, get credentials and update user data\n      stripeUpdate({\n        userId: jwt.user._id\n      }, {\n        t: jwt.token\n      }, parsed.code, signal).then((data) => {\n        if (data.error) {\n          setValues({...values, error: true, connected: false, connecting: false})\n        } else {\n          setValues({...values, connected: true, connecting: false, error: false})\n        }\n      })\n    }\n    return function cleanup(){\n      abortController.abort()\n    }\n\n  }, [])\n\n    return (\n      <div>\n        <Paper className={classes.root} elevation={4}>\n          <Typography type=\"title\" className={classes.title}>\n            Connect your Stripe Account\n          </Typography>\n          {values.error && (<Typography type=\"subheading\" className={classes.subheading}>\n              Could not connect your Stripe account. Try again later.\n            </Typography>)}\n          {values.connecting && (<Typography type=\"subheading\" className={classes.subheading}>\n              Connecting your Stripe account ...\n            </Typography>)}\n          {values.connected && (<Typography type=\"subheading\" className={classes.subheading}>\n              Your Stripe account successfully connected!\n            </Typography>)}\n        </Paper>\n      </div>\n    )\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\user\\Profile.js",["225","226"],"D:\\code\\Du_an\\frontend\\src\\components\\shop\\NewShop.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\auth\\Signin.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\shop\\Shops.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\auth\\PrivateRoute.js",["227"],"import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport auth from './auth-helper'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    auth.isAuthenticated() ? (\n      <Component {...props}/>\n    ) : (\n      <Redirect to={{\n        pathname: '/signin',\n        state: { from: props.location }\n      }}/>\n    )\n  )}/>\n)\n\nexport default PrivateRoute\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\EditProduct.js",["228","229"],"import React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport Avatar from '@material-ui/core/Avatar'\nimport auth from './../auth/auth-helper'\nimport FileUpload from '@material-ui/icons/AddPhotoAlternate'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {withStyles} from '@material-ui/core/styles'\nimport {read, update} from './api-product.js'\nimport {Link, Redirect} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    maxWidth: 500,\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  error: {\n    verticalAlign: 'middle'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing(2)\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60,\n    margin: 'auto'\n  },\n  input: {\n    display: 'none'\n  },\n  filename:{\n    marginLeft:'10px'\n  }\n}))\n\nexport default function EditProduct ({match}) {\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      name: '',\n      description: '',\n      image: '',\n      category: '',\n      quantity: '',\n      price: '',\n      redirect: false,\n      error: ''\n    })\n\n    const jwt = auth.isAuthenticated()\n    useEffect(() => {\n      const abortController = new AbortController()\n      const signal = abortController.signal\n      read({\n        productId: match.params.productId\n      }, signal).then((data) => {\n        if (data.error) {\n          setValues({...values, error: data.error})\n        } else {\n          setValues({...values, id: data._id, name: data.name, description: data.description, category: data.category, quantity:data.quantity, price: data.price})\n        }\n      })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n  const clickSubmit = () => {\n    let productData = new FormData()\n    values.name && productData.append('name', values.name)\n    values.description && productData.append('description', values.description)\n    values.image && productData.append('image', values.image)\n    values.category && productData.append('category', values.category)\n    values.quantity && productData.append('quantity', values.quantity)\n    values.price && productData.append('price', values.price)\n  \n    update({\n      shopId: match.params.shopId,\n      productId: match.params.productId\n    }, {\n      t: jwt.token\n    }, productData).then((data) => {\n      if (data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, 'redirect': true})\n      }\n    })\n  }\n  const handleChange = name => event => {\n    const value = name === 'image'\n      ? event.target.files[0]\n      : event.target.value\n    setValues({...values,  [name]: value })\n  }\n    const imageUrl = values.id\n          ? `/api/product/image/${values.id}?${new Date().getTime()}`\n          : '/api/product/defaultphoto'\n    if (values.redirect) {\n      return (<Redirect to={'/seller/shop/edit/'+match.params.shopId}/>)\n    }\n    return (<div>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n            Edit Product\n          </Typography><br/>\n          <Avatar src={imageUrl} className={classes.bigAvatar}/><br/>\n          <input accept=\"image/*\" onChange={handleChange('image')} className={classes.input} id=\"icon-button-file\" type=\"file\" />\n          <label htmlFor=\"icon-button-file\">\n            <Button variant=\"contained\" color=\"secondary\" component=\"span\">\n              Change Image\n              <FileUpload/>\n            </Button>\n          </label> <span className={classes.filename}>{values.image ? values.image.name : ''}</span><br/>\n          <TextField id=\"name\" label=\"Name\" className={classes.textField} value={values.name} onChange={handleChange('name')} margin=\"normal\"/><br/>\n          <TextField\n            id=\"multiline-flexible\"\n            label=\"Description\"\n            multiline\n            rows=\"3\"\n            value={values.description}\n            onChange={handleChange('description')}\n            className={classes.textField}\n            margin=\"normal\"\n          /><br/>\n          <TextField id=\"category\" label=\"Category\" className={classes.textField} value={values.category} onChange={handleChange('category')} margin=\"normal\"/><br/>\n          <TextField id=\"quantity\" label=\"Quantity\" className={classes.textField} value={values.quantity} onChange={handleChange('quantity')} type=\"number\" margin=\"normal\"/><br/>\n          <TextField id=\"price\" label=\"Price\" className={classes.textField} value={values.price} onChange={handleChange('price')} type=\"number\" margin=\"normal\"/><br/>\n          {\n            values.error && (<Typography component=\"p\" color=\"error\">\n              <Icon color=\"error\" className={classes.error}>error</Icon>\n              {values.error}</Typography>)\n          }\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\" variant=\"contained\" onClick={clickSubmit} className={classes.submit}>Update</Button>\n          <Link to={'/seller/shops/edit/'+match.params.shopId} className={classes.submit}><Button variant=\"contained\">Cancel</Button></Link>\n        </CardActions>\n      </Card>\n    </div>)\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\Shop.js",["230"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport Grid from '@material-ui/core/Grid'\nimport {read} from './api-shop.js'\nimport Products from './../product/Products'\nimport {listByShop} from './../product/api-product.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 30,\n  },\n  card: {\n    textAlign: 'center',\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.openTitle\n  },\n  bigAvatar: {\n    width: 100,\n    height: 100,\n    margin: 'auto'\n  },\n  productTitle: {\n    padding:`${theme.spacing(3)}px ${theme.spacing(2.5)}px ${theme.spacing(1)}px ${theme.spacing(2)}px`,\n    color: theme.palette.openTitle,\n    width: '100%',\n    fontSize: '1.2em'\n  }\n}))\n\nexport default function Shop({match}) {\n  const classes = useStyles()\n  const [shop, setShop] = useState('')\n  const [products, setProducts] = useState([])\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    listByShop({\n      shopId: match.params.shopId\n    }, signal).then((data)=>{\n      if (data.error) {\n        setError(data.error)\n      } else {\n        setProducts(data)\n      }\n    })\n    read({\n      shopId: match.params.shopId\n    }, signal).then((data) => {\n      if (data.error) {\n        setError(data.error)\n      } else {\n        setShop(data)\n      }\n    })\n\n    return function cleanup(){\n      abortController.abort()\n    }\n\n  }, [match.params.shopId])\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    listByShop({\n      shopId: match.params.shopId\n    }, signal).then((data)=>{\n      if (data.error) {\n        setError(data.error)\n      } else {\n        setProducts(data)\n      }\n    })\n\n    return function cleanup(){\n      abortController.abort()\n    }\n\n  }, [match.params.shopId])\n\n    const logoUrl = shop._id\n          ? `/api/shops/logo/${shop._id}?${new Date().getTime()}`\n          : '/api/shops/defaultphoto'\n    return (<div className={classes.root}>\n      <Grid container spacing={8}>\n        <Grid item xs={4} sm={4}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n                {shop.name}\n              </Typography>\n              <br/>\n              <Avatar src={logoUrl} className={classes.bigAvatar}/><br/>\n                <Typography type=\"subheading\" component=\"h2\" className={classes.subheading}>\n                  {shop.description}\n                </Typography><br/>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={8} sm={8}>\n          <Card>\n            <Typography type=\"title\" component=\"h2\" className={classes.productTitle}>Products</Typography>\n            <Products products={products} searched={false}/>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>)\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\shop\\MyShops.js",["231","232"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Edit from '@material-ui/icons/Edit'\nimport Divider from '@material-ui/core/Divider'\nimport auth from './../auth/auth-helper'\nimport {listByOwner} from './api-shop.js'\nimport {Redirect, Link} from 'react-router-dom'\nimport DeleteShop from './DeleteShop'\n\nconst useStyles = makeStyles(theme => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(5)\n  }),\n  title: {\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(3)}px ${theme.spacing(1)}px` ,\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  addButton:{\n    float:'right'\n  },\n  leftIcon: {\n    marginRight: \"8px\"\n  }\n}))\n\nexport default function MyShops(){\n  const classes = useStyles()\n  const [shops, setShops] = useState([])\n  const [redirectToSignin, setRedirectToSignin] = useState(false)\n  const jwt = auth.isAuthenticated()\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    listByOwner({\n      userId: jwt.user._id\n    }, {t: jwt.token}, signal).then((data) => {\n      if (data.error) {\n        setRedirectToSignin(true)\n      } else {\n        setShops(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const removeShop = (shop) => {\n    const updatedShops = [...shops]\n    const index = updatedShops.indexOf(shop)\n    updatedShops.splice(index, 1)\n    setShops(updatedShops)\n  }\n\n    if (redirectToSignin) {\n      return <Redirect to='/signin'/>\n    }\n    return (\n    <div>\n      <Paper className={classes.root} elevation={4}>\n        <Typography type=\"title\" className={classes.title}>\n          Your Shops\n          <span className={classes.addButton}>\n            <Link to=\"/seller/shop/new\">\n              <Button color=\"primary\" variant=\"contained\">\n                <Icon className={classes.leftIcon}>add_box</Icon>  New Shop\n              </Button>\n            </Link>\n          </span>\n        </Typography>\n        <List dense>\n        {shops.map((shop, i) => {\n            return   <span key={i}>\n              <ListItem button>\n                <ListItemAvatar>\n                  <Avatar src={'/api/shops/logo/'+shop._id+\"?\" + new Date().getTime()}/>\n                </ListItemAvatar>\n                <ListItemText primary={shop.name} secondary={shop.description}/>\n                { auth.isAuthenticated().user && auth.isAuthenticated().user._id == shop.owner._id &&\n                  (<ListItemSecondaryAction>\n                    <Link to={\"/seller/orders/\" + shop.name+ '/'+shop._id}>\n                      <Button aria-label=\"Orders\" color=\"primary\">\n                        View Orders\n                      </Button>\n                    </Link>\n                    <Link to={\"/seller/shop/edit/\" + shop._id}>\n                      <IconButton aria-label=\"Edit\" color=\"primary\">\n                        <Edit/>\n                      </IconButton>\n                    </Link>\n                    <DeleteShop shop={shop} onRemove={removeShop}/>\n                  </ListItemSecondaryAction>)\n                }\n              </ListItem>\n              <Divider/>\n            </span>})}\n        </List>\n      </Paper>\n    </div>)\n}","D:\\code\\Du_an\\frontend\\src\\components\\shop\\EditShop.js",["233"],"import React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport Avatar from '@material-ui/core/Avatar'\nimport auth from './../auth/auth-helper'\nimport FileUpload from '@material-ui/icons/AddPhotoAlternate'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {read, update} from './api-shop.js'\nimport {Redirect} from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport MyProducts from './../product/MyProducts'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 30,\n  },\n  card: {\n    textAlign: 'center',\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.openTitle\n  },\n  error: {\n    verticalAlign: 'middle'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  submit: {\n    margin: 'auto',\n    marginBottom: theme.spacing(2)\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60,\n    margin: 'auto'\n  },\n  input: {\n    display: 'none'\n  },\n  filename:{\n    marginLeft:'10px'\n  }\n}))\n\nexport default function EditShop ({match}) {\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      name: '',\n      description: '',\n      image: '',\n      redirect: false,\n      error: '',\n      id: ''\n  })\n  const jwt = auth.isAuthenticated()\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    read({\n      shopId: match.params.shopId\n    }, signal).then((data) => {\n      if (data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, id: data._id, name: data.name, description: data.description, owner: data.owner.name})\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const clickSubmit = () => {\n    let shopData = new FormData()\n    values.name && shopData.append('name', values.name)\n    values.description && shopData.append('description', values.description)\n    values.image && shopData.append('image', values.image)\n    update({\n      shopId: match.params.shopId\n    }, {\n      t: jwt.token\n    }, shopData).then((data) => {\n      if (data.error) {\n        setValues({...values, error: data.error})\n      } else {\n        setValues({...values, 'redirect': true})\n      }\n    })\n  }\n  const handleChange = name => event => {\n    const value = name === 'image'\n      ? event.target.files[0]\n      : event.target.value\n    setValues({...values,  [name]: value })\n  }\n\n    const logoUrl = values.id\n          ? `/api/shops/logo/${values.id}?${new Date().getTime()}`\n          : '/api/shops/defaultphoto'\n    if (values.redirect) {\n      return (<Redirect to={'/seller/shops'}/>)\n    }\n    return (<div className={classes.root}>\n      <Grid container spacing={8}>\n        <Grid item xs={6} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n                Edit Shop\n              </Typography>\n              <br/>\n              <Avatar src={logoUrl} className={classes.bigAvatar}/><br/>\n              <input accept=\"image/*\" onChange={handleChange('image')} className={classes.input} id=\"icon-button-file\" type=\"file\" />\n              <label htmlFor=\"icon-button-file\">\n                <Button variant=\"contained\" color=\"default\" component=\"span\">\n                  Change Logo\n                  <FileUpload/>\n                </Button>\n              </label> <span className={classes.filename}>{values.image ? values.image.name : ''}</span><br/>\n              <TextField id=\"name\" label=\"Name\" className={classes.textField} value={values.name} onChange={handleChange('name')} margin=\"normal\"/><br/>\n              <TextField\n                id=\"multiline-flexible\"\n                label=\"Description\"\n                multiline\n                rows=\"3\"\n                value={values.description}\n                onChange={handleChange('description')}\n                className={classes.textField}\n                margin=\"normal\"\n              /><br/>\n              <Typography type=\"subheading\" component=\"h4\" className={classes.subheading}>\n                Owner: {values.owner}\n              </Typography><br/>\n              {\n                values.error && (<Typography component=\"p\" color=\"error\">\n                    <Icon color=\"error\" className={classes.error}>error</Icon>\n                    {values.error}\n                  </Typography>)\n              }\n            </CardContent>\n            <CardActions>\n              <Button color=\"primary\" variant=\"contained\" onClick={clickSubmit} className={classes.submit}>Update</Button>\n            </CardActions>\n          </Card>\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <MyProducts shopId={match.params.shopId}/>\n          </Grid>\n        </Grid>\n    </div>)\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\NewProduct.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\cart\\Cart.js",["234"],"import React, {useState, useEffect} from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport {makeStyles} from '@material-ui/core/styles'\nimport CartItems from './CartItems'\nimport Checkout from './Checkout'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 30,\n  }\n}))\n\nexport default function Cart () {\n  const classes = useStyles()\n  const [checkout, setCheckout] = useState(false)\n\n  const showCheckout = val => {\n    setCheckout(val)\n  }\n\n    return (<div className={classes.root}>\n      <Grid container spacing={8}>\n        <Grid item xs={6} sm={6}>\n          <CartItems checkout={checkout}\n                     setCheckout={showCheckout}/>\n        </Grid>\n        {checkout &&\n          <Grid item xs={6} sm={6}>\n              <Checkout/>\n          </Grid>}\n        </Grid>\n      </div>)\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\Product.js",["235"],"import React, {useState, useEffect}  from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport Grid from '@material-ui/core/Grid'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {read, listRelated} from './api-product.js'\nimport {Link} from 'react-router-dom'\nimport Suggestions from './../product/Suggestions'\nimport AddToCart from './../cart/AddToCart'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: 30,\n  },\n  flex:{\n    display:'flex'\n  },\n  card: {\n    padding:'24px 40px 40px'\n  },\n  subheading: {\n    margin: '24px',\n    color: theme.palette.openTitle\n  },\n  price: {\n    padding: '16px',\n    margin: '16px 0px',\n    display: 'flex',\n    backgroundColor: '#93c5ae3d',\n    fontSize: '1.3em',\n    color: '#375a53',\n  },\n  media: {\n    height: 200,\n    display: 'inline-block',\n    width: '50%',\n    marginLeft: '24px'\n  },\n  icon: {\n    verticalAlign: 'sub'\n  },\n  link:{\n    color: '#3e4c54b3',\n    fontSize: '0.9em'\n  },\n  addCart: {\n    width: '35px',\n    height: '35px',\n    padding: '10px 12px',\n    borderRadius: '0.25em',\n    backgroundColor: '#5f7c8b'\n  },\n  action: {\n    margin: '8px 24px',\n    display: 'inline-block'\n  }\n}))\n\nexport default function Product ({match}) {\n  const classes = useStyles()\n  const [product, setProduct] = useState({shop:{}})\n  const [suggestions, setSuggestions] = useState([])\n  const [error, setError] = useState('')\n    useEffect(() => {\n      const abortController = new AbortController()\n      const signal = abortController.signal\n  \n      read({productId: match.params.productId}, signal).then((data) => {\n        if (data.error) {\n          setError(data.error)\n        } else {\n          setProduct(data)\n        }\n      })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [match.params.productId])\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n        listRelated({\n          productId: match.params.productId}, signal).then((data) => {\n          if (data.error) {\n            setError(data.error)\n          } else {\n            setSuggestions(data)\n          }\n        })\n  return function cleanup(){\n    abortController.abort()\n  }\n}, [match.params.productId])\n\n    const imageUrl = product._id\n          ? `/api/product/image/${product._id}?${new Date().getTime()}`\n          : '/api/product/defaultphoto'\n    return (\n        <div className={classes.root}>\n          <Grid container spacing={10}>\n            <Grid item xs={7} sm={7}>\n              <Card className={classes.card}>\n                <CardHeader\n                  title={product.name}\n                  subheader={product.quantity > 0? 'In Stock': 'Out of Stock'}\n                  action={\n                    <span className={classes.action}>\n                      <AddToCart cartStyle={classes.addCart} item={product}/>\n                    </span>\n                  }\n                />\n                <div className={classes.flex}>\n                  <CardMedia\n                    className={classes.media}\n                    image={imageUrl}\n                    title={product.name}\n                  />\n                  <Typography component=\"p\" variant=\"subtitle1\" className={classes.subheading}>\n                    {product.description}<br/>\n                    <span className={classes.price}>$ {product.price}</span>\n                    <Link to={'/shops/'+product.shop._id} className={classes.link}>\n                      <span>\n                        <Icon className={classes.icon}>shopping_basket</Icon> {product.shop.name}\n                      </span>\n                    </Link>\n                  </Typography>\n\n                </div>\n              </Card>\n            </Grid>\n            {suggestions.length > 0 &&\n              (<Grid item xs={5} sm={5}>\n                <Suggestions  products={suggestions} title='Related Products'/>\n              </Grid>)}\n          </Grid>\n        </div>)\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\order\\Order.js",["236","237","238","239"],"import React, {useState, useEffect}  from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Divider from '@material-ui/core/Divider'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {read} from './api-order.js'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n    flexGrow: 1,\n    margin: 30,\n  },\n  cart: {\n    textAlign: 'left',\n    width: '100%',\n    display: 'inline-flex'\n  },\n  details: {\n    display: 'inline-block',\n    width: \"100%\",\n    padding: \"4px\"\n  },\n  content: {\n    flex: '1 0 auto',\n    padding: '16px 8px 0px'\n  },\n  cover: {\n    width: 160,\n    height: 125,\n    margin: '8px'\n  },\n  info: {\n    color: 'rgba(83, 170, 146, 0.82)',\n    fontSize: '0.95rem',\n    display: 'inline'\n  },\n  thanks:{\n    color: 'rgb(136, 183, 107)',\n    fontSize: '0.9rem',\n    fontStyle: 'italic'\n  },\n  innerCardItems: {\n    textAlign: 'left',\n    margin: '24px 10px 24px 24px',\n    padding: '24px 20px 40px 20px',\n    backgroundColor: '#80808017'\n  },\n  innerCard: {\n    textAlign: 'left',\n    margin: '24px 24px 24px 10px',\n    padding: '30px 45px 40px 45px',\n    backgroundColor: '#80808017'\n  },\n  title: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.openTitle\n  },\n  productTitle: {\n    fontSize: '1.15em',\n    marginBottom: '5px'\n  },\n  itemTotal: {\n    float: 'right',\n    marginRight: '40px',\n    fontSize: '1.5em',\n    color: 'rgb(72, 175, 148)'\n  },\n  itemShop: {\n    display: 'block',\n    fontSize: '1em',\n    color: '#78948f'\n  },\n  checkout: {\n    float: 'right',\n    margin: '24px'\n  },\n  total: {\n    fontSize: '1.2em',\n    color: 'rgb(53, 97, 85)',\n    marginRight: '16px',\n    fontWeight: '600',\n    verticalAlign: 'bottom'\n  }\n}))\n\nexport default function Order({match}) {\n  const classes = useStyles()\n  const [order, setOrder] = useState({products:[], delivery_address:{}})\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    read({\n      orderId: match.params.orderId\n    }).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setOrder(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const getTotal = () => {\n    return order.products.reduce((a, b) => {\n       const quantity = b.status == \"Cancelled\" ? 0 : b.quantity\n        return a + (quantity*b.product.price)\n    }, 0)\n  }\n\n    return (\n      <Card className={classes.card}>\n        <Typography type=\"headline\" component=\"h2\" className={classes.title}>\n            Order Details\n        </Typography>\n        <Typography type=\"subheading\" component=\"h2\" className={classes.subheading}>\n            Order Code: <strong>{order._id}</strong> <br/> Placed on {(new Date(order.created)).toDateString()}\n        </Typography><br/>\n        <Grid container spacing={4}>\n            <Grid item xs={7} sm={7}>\n                <Card className={classes.innerCardItems}>\n                  {order.products.map((item, i) => {\n                    return  <span key={i}>\n                      <Card className={classes.cart} >\n                        <CardMedia\n                          className={classes.cover}\n                          image={'/api/product/image/'+item.product._id}\n                          title={item.product.name}\n                        />\n                        <div className={classes.details}>\n                          <CardContent className={classes.content}>\n                            <Link to={'/product/'+item.product._id}><Typography type=\"title\" component=\"h3\" className={classes.productTitle} color=\"primary\">{item.product.name}</Typography></Link>\n                            <Typography type=\"subheading\" component=\"h3\" className={classes.itemShop} color=\"primary\">$ {item.product.price} x {item.quantity}</Typography>\n                            <span className={classes.itemTotal}>${item.product.price * item.quantity}</span>\n                            <span className={classes.itemShop}>Shop: {item.shop.name}</span>\n                            <Typography type=\"subheading\" component=\"h3\" color={item.status == \"Cancelled\" ? \"error\":\"secondary\"}>Status: {item.status}</Typography>\n                          </CardContent>\n                        </div>\n                      </Card>\n                      <Divider/>\n                    </span>})\n                  }\n                  <div className={classes.checkout}>\n                    <span className={classes.total}>Total: ${getTotal()}</span>\n                  </div>\n                </Card>\n            </Grid>\n            <Grid item xs={5} sm={5}>\n              <Card className={classes.innerCard}>\n                <Typography type=\"subheading\" component=\"h2\" className={classes.productTitle} color=\"primary\">\n                 Deliver to:\n                </Typography>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.info} color=\"primary\"><strong>{order.customer_name}</strong></Typography><br/>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.info} color=\"primary\">{order.customer_email}</Typography><br/>\n                <br/>\n                <Divider/>\n                <br/>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.itemShop} color=\"primary\">{order.delivery_address.street}</Typography>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.itemShop} color=\"primary\">{order.delivery_address.city}, {order.delivery_address.state} {order.delivery_address.zipcode}</Typography>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.itemShop} color=\"primary\">{order.delivery_address.country}</Typography><br/>\n                <Typography type=\"subheading\" component=\"h3\" className={classes.thanks} color=\"primary\">Thank you for shopping with us! <br/>You can track the status of your purchased items on this page.</Typography>\n              </Card>\n            </Grid>\n        </Grid>\n      </Card>\n    )\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\order\\ShopOrders.js",["240","241","242"],"import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport auth from './../auth/auth-helper'\nimport {listByShop} from './api-order.js'\nimport ProductOrderEdit from './ProductOrderEdit'\n\nconst useStyles = makeStyles(theme => ({\n  root: theme.mixins.gutters({\n    maxWidth: 600,\n    margin: 'auto',\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(5)\n  }),\n  title: {\n    margin: `${theme.spacing(3)}px 0 ${theme.spacing(3)}px ${theme.spacing(1)}px` ,\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(1),\n    color: '#434b4e',\n    fontSize: '1.1em'\n  },\n  customerDetails: {\n    paddingLeft: '36px',\n    paddingTop: '16px',\n    backgroundColor:'#f8f8f8'\n  }\n}))\nexport default function ShopOrders({match}) {\n  const classes = useStyles()\n  const [orders, setOrders] = useState([])\n  const [open, setOpen] = useState(0)\n\n\n    const jwt = auth.isAuthenticated()\n    useEffect(() => {\n      const abortController = new AbortController()\n      const signal = abortController.signal\n      listByShop({\n        shopId: match.params.shopId\n      }, {t: jwt.token}, signal).then((data) => {\n        if (data.error) {\n          console.log(data)\n        } else {\n          setOrders(data)\n        }\n      })\n      return function cleanup(){\n        abortController.abort()\n      }\n    }, [])\n\n  const handleClick = index => event => {\n    setOpen(index)\n  }\n\n  const updateOrders = (index, updatedOrder) => {\n    let updatedOrders = orders\n    updatedOrders[index] = updatedOrder\n    setOrders([...updatedOrders])\n  }\n\n    return (\n    <div>\n      <Paper className={classes.root} elevation={4}>\n        <Typography type=\"title\" className={classes.title}>\n          Orders in {match.params.shop}\n        </Typography>\n        <List dense >\n          {orders.map((order, index) => {\n            return   <span key={index}>\n              <ListItem button onClick={handleClick(index)}>\n                <ListItemText primary={'Order # '+order._id} secondary={(new Date(order.created)).toDateString()}/>\n                {open == index ? <ExpandLess /> : <ExpandMore />}\n              </ListItem><Divider/>\n              <Collapse component=\"li\" in={open == index} timeout=\"auto\" unmountOnExit>\n                <ProductOrderEdit shopId={match.params.shopId} order={order} orderIndex={index} updateOrders={updateOrders}/>\n                <div className={classes.customerDetails}>\n                  <Typography type=\"subheading\" component=\"h3\" className={classes.subheading}>\n                    Deliver to:\n                  </Typography>\n                  <Typography type=\"subheading\" component=\"h3\" color=\"primary\"><strong>{order.customer_name}</strong> ({order.customer_email})</Typography>\n                  <Typography type=\"subheading\" component=\"h3\" color=\"primary\">{order.delivery_address.street}</Typography>\n                  <Typography type=\"subheading\" component=\"h3\" color=\"primary\">{order.delivery_address.city}, {order.delivery_address.state} {order.delivery_address.zipcode}</Typography>\n                  <Typography type=\"subheading\" component=\"h3\" color=\"primary\">{order.delivery_address.country}</Typography><br/>\n                </div>\n              </Collapse>\n              <Divider/>\n            </span>})}\n        </List>\n      </Paper>\n    </div>)\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\api-product.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\user\\api-user.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\auth\\auth-helper.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\cart\\cart-helper.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\product\\Suggestions.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\product\\Search.js",["243"],"import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Divider from '@material-ui/core/Divider'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport SearchIcon from '@material-ui/icons/Search'\nimport {list} from './api-product.js'\nimport Products from './Products'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: 'auto',\n    textAlign: 'center',\n    paddingTop: 10,\n    backgroundColor: '#80808024'\n  },\n  menu: {\n    width: 200,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 130,\n    verticalAlign: 'bottom',\n    marginBottom: '20px'\n  },\n  searchField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300,\n    marginBottom: '20px'\n  },\n  searchButton: {\n    minWidth: '20px',\n    height: '30px',\n    padding: '0 8px',\n    marginBottom: '20px'\n  }\n}))\n\nexport default function Search(props) {\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      category: '',\n      search: '',\n      results: [],\n      searched: false\n  })\n  const handleChange = name => event => {\n    setValues({\n      ...values, [name]: event.target.value,\n    })\n  }\n  const search = () => {\n    if(values.search){\n      list({\n        search: values.search || undefined, category: values.category\n      }).then((data) => {\n        if (data.error) {\n          console.log(data.error)\n        } else {\n          setValues({...values, results: data, searched:true})\n        }\n      })\n    }\n  }\n  const enterKey = (event) => {\n    if(event.keyCode == 13){\n      event.preventDefault()\n      search()\n    }\n  }\n    return (\n      <div>\n        <Card className={classes.card}>\n          <TextField\n            id=\"select-category\"\n            select\n            label=\"Select category\"\n            className={classes.textField}\n            value={values.category}\n            onChange={handleChange('category')}\n            SelectProps={{\n              MenuProps: {\n                className: classes.menu,\n              },\n            }}\n            margin=\"normal\">\n            <MenuItem value=\"All\">\n              All\n            </MenuItem>\n            { props.categories.map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            id=\"search\"\n            label=\"Search products\"\n            type=\"search\"\n            onKeyDown={enterKey}\n            onChange={handleChange('search')}\n            className={classes.searchField}\n            margin=\"normal\"\n          />\n          <Button variant=\"contained\" color={'primary'} className={classes.searchButton} onClick={search}>\n            <SearchIcon/>\n          </Button>\n          <Divider/>\n          <Products products={values.results} searched={values.searched}/>\n        </Card>\n      </div>\n    )\n}\nSearch.propTypes = {\n  categories: PropTypes.array.isRequired\n}","D:\\code\\Du_an\\frontend\\src\\components\\product\\Categories.js",["244","245","246","247"],"import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport Icon from '@material-ui/core/Icon'\nimport {list} from './api-product.js'\nimport Products from './Products'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    background: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    width:'100%',\n    transform: 'translateZ(0)',\n  },\n  tileTitle: {\n    verticalAlign: 'middle',\n    lineHeight: 2.5,\n    textAlign: 'center',\n    fontSize: '1.35em',\n    margin: '0 4px 0 0',\n  },\n  card: {\n    margin: 'auto',\n    marginTop: 20\n  },\n  title: {\n    padding:`${theme.spacing(3)}px ${theme.spacing(2.5)}px ${theme.spacing(2)}px`,\n    color: theme.palette.openTitle,\n    backgroundColor: '#80808024',\n    fontSize: '1.1em'\n  },\n  icon: {\n    verticalAlign: 'sub',\n    color: '#738272',\n    fontSize: '0.9em'\n  },\n  link: {\n    color: '#4d6538',\n    textShadow: '0px 2px 12px #ffffff',\n    cursor:'pointer'\n  }\n}))\n\nexport default function Categories(props){\n  const classes = useStyles()\n  const [products, setProducts] = useState([])\n  const [selected, setSelected] = useState(props.categories[0])\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    list({\n      category: props.categories[0]\n    }).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setProducts(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const listbyCategory = category => event => {\n    setSelected(category)\n    list({\n      category: category\n    }).then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setProducts(data)\n      }\n    })\n  }\n\n    return (\n      <div>\n        <Card className={classes.card}>\n          <Typography type=\"title\" className={classes.title}>\n            Explore by category\n          </Typography>\n          <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4}>\n              {props.categories.map((tile, i) => (\n                <GridListTile key={i} className={classes.tileTitle} style={{height: '64px', backgroundColor: selected == tile? 'rgba(95, 139, 137, 0.56)':'rgba(95, 124, 139, 0.32)'}}>\n                  <span className={classes.link} onClick={listbyCategory(tile)}>{tile}  <Icon className={classes.icon}>{selected == tile && 'arrow_drop_down'}</Icon></span>\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n          <Divider/>\n          <Products products={products} searched={false}/>\n        </Card>\n      </div>\n    )\n}\nCategories.propTypes = {\n  categories: PropTypes.array.isRequired\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\order\\api-order.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\order\\ProductOrderEdit.js",["248","249","250","251","252"],"import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport Divider from '@material-ui/core/Divider'\nimport auth from './../auth/auth-helper'\nimport {getStatusValues, update, cancelProduct, processCharge} from './api-order.js'\n\nconst useStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n    paddingBottom: 0\n  },\n  listImg: {\n    width: '70px',\n    verticalAlign: 'top',\n    marginRight: '10px'\n  },\n  listDetails: {\n    display: \"inline-block\"\n  },\n  listQty: {\n    margin: 0,\n    fontSize: '0.9em',\n    color: '#5f7c8b'\n  },\n  textField: {\n    width: '160px',\n    marginRight: '16px'\n  },\n  statusMessage: {\n    position: 'absolute',\n    zIndex: '12',\n    right: '5px',\n    padding: '5px'\n  }\n}))\nexport default function ProductOrderEdit (props){\n  const classes = useStyles()\n  const [values, setValues] = useState({\n      open: 0,\n      statusValues: [],\n      error: ''\n  })\n  const jwt = auth.isAuthenticated()\n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n    getStatusValues(signal).then((data) => {\n      if (data.error) {\n        setValues({...values, error: \"Could not get status\"})\n      } else {\n        setValues({...values, statusValues: data, error: ''})\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const handleStatusChange = productIndex => event => {\n    let order = props.order\n    order.products[productIndex].status = event.target.value\n    let product = order.products[productIndex]\n\n    if (event.target.value == \"Cancelled\") {\n      cancelProduct({\n          shopId: props.shopId,\n          productId: product.product._id\n        }, {\n          t: jwt.token\n        }, {\n          cartItemId: product._id,\n          status: event.target.value,\n          quantity: product.quantity\n        })\n        .then((data) => {\n          if (data.error) {\n            setValues({\n              ...values,\n              error: \"Status not updated, try again\"\n            })\n          } else {\n            props.updateOrders(props.orderIndex, order)\n            setValues({\n              ...values,\n              error: ''\n            })\n          }\n        })\n    } else if (event.target.value == \"Processing\") {\n      processCharge({\n          userId: jwt.user._id,\n          shopId: props.shopId,\n          orderId: order._id\n        }, {\n          t: jwt.token\n        }, {\n          cartItemId: product._id,\n          status: event.target.value,\n          amount: (product.quantity * product.product.price)\n        })\n        .then((data) => {\n          if (data.error) {\n            setValues({\n              ...values,\n              error: \"Status not updated, try again\"\n            })\n          } else {\n            props.updateOrders(props.orderIndex, order)\n            setValues({\n              ...values,\n              error: ''\n            })\n          }\n        })\n    } else {\n      update({\n          shopId: props.shopId\n        }, {\n          t: jwt.token\n        }, {\n          cartItemId: product._id,\n          status: event.target.value\n        })\n        .then((data) => {\n          if (data.error) {\n            setValues({\n              ...values,\n              error: \"Status not updated, try again\"\n            })\n          } else {\n            props.updateOrders(props.orderIndex, order)\n            setValues({\n              ...values,\n              error: ''\n            })\n          }\n        })\n    }\n  }\n    return (\n    <div>\n      <Typography component=\"span\" color=\"error\" className={classes.statusMessage}>\n        {values.error}\n      </Typography>\n      <List disablePadding style={{backgroundColor:'#f8f8f8'}}>\n        {props.order.products.map((item, index) => {\n          return <span key={index}>\n                  { item.shop == props.shopId &&\n                    <ListItem button className={classes.nested}>\n                      <ListItemText\n                        primary={<div>\n                                    <img className={classes.listImg} src={'/api/product/image/'+item.product._id}/>\n                                    <div className={classes.listDetails}>\n                                      {item.product.name}\n                                      <p className={classes.listQty}>{\"Quantity: \"+item.quantity}</p>\n                                    </div>\n                                  </div>}/>\n                      <TextField\n                        id=\"select-status\"\n                        select\n                        label=\"Update Status\"\n                        className={classes.textField}\n                        value={item.status}\n                        onChange={handleStatusChange(index)}\n                        SelectProps={{\n                          MenuProps: {\n                            className: classes.menu,\n                          },\n                        }}\n                        margin=\"normal\"\n                      >\n                        {values.statusValues.map(option => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </ListItem>\n                  }\n                  <Divider style={{margin: 'auto', width: \"80%\"}}/>\n                </span>})\n              }\n      </List>\n    </div>)\n}\nProductOrderEdit.propTypes = {\n  shopId: PropTypes.string.isRequired,\n  order: PropTypes.object.isRequired,\n  orderIndex: PropTypes.number.isRequired,\n  updateOrders: PropTypes.func.isRequired\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\auth\\api-auth.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\cart\\Checkout.js",["253"],"import React, {useState, useEffect} from 'react'\nimport Card from '@material-ui/core/Card'\nimport {makeStyles} from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport auth from './../auth/auth-helper'\nimport cart from './cart-helper.js'\nimport PlaceOrder from './PlaceOrder'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: '24px 0px',\n    padding: '16px 40px 90px 40px',\n    backgroundColor: '#80808017'\n  },\n  title: {\n    margin: '24px 16px 8px 0px',\n    color: theme.palette.openTitle\n  },\n  subheading: {\n    color: 'rgba(88, 114, 128, 0.87)',\n    marginTop: \"20px\",\n  },\n  addressField: {\n    marginTop: \"4px\",\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"45%\"\n  },\n  streetField: {\n    marginTop: \"4px\",\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"93%\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"90%\"\n  }\n}))\n\nexport default function Checkout (){\n  const classes = useStyles()\n  const user = auth.isAuthenticated().user\n  const [values, setValues] = useState({\n    checkoutDetails: {\n      products: cart.getCart(),\n      customer_name: user.name,\n      customer_email:user.email,\n      delivery_address: { street: '', city: '', state: '', zipcode: '', country:''}\n    },\n    error: ''\n  })\n\n  const handleCustomerChange = name => event => {\n    let checkoutDetails = values.checkoutDetails\n    checkoutDetails[name] = event.target.value || undefined\n    setValues({...values, checkoutDetails: checkoutDetails})\n  }\n\n  const handleAddressChange = name => event => {\n    let checkoutDetails = values.checkoutDetails\n    checkoutDetails.delivery_address[name] = event.target.value || undefined\n    setValues({...values, checkoutDetails: checkoutDetails})\n  }\n\n    return (\n      <Card className={classes.card}>\n        <Typography type=\"title\" className={classes.title}>\n          Checkout\n        </Typography>\n        <TextField id=\"name\" label=\"Name\" className={classes.textField} value={values.checkoutDetails.customer_name} onChange={handleCustomerChange('customer_name')} margin=\"normal\"/><br/>\n        <TextField id=\"email\" type=\"email\" label=\"Email\" className={classes.textField} value={values.checkoutDetails.customer_email} onChange={handleCustomerChange('customer_email')} margin=\"normal\"/><br/>\n        <Typography type=\"subheading\" component=\"h3\" className={classes.subheading}>\n            Delivery Address\n        </Typography>\n        <TextField id=\"street\" label=\"Street Address\" className={classes.streetField} value={values.checkoutDetails.delivery_address.street} onChange={handleAddressChange('street')} margin=\"normal\"/><br/>\n        <TextField id=\"city\" label=\"City\" className={classes.addressField} value={values.checkoutDetails.delivery_address.city} onChange={handleAddressChange('city')} margin=\"normal\"/>\n        <TextField id=\"state\" label=\"State\" className={classes.addressField} value={values.checkoutDetails.delivery_address.state} onChange={handleAddressChange('state')} margin=\"normal\"/><br/>\n        <TextField id=\"zipcode\" label=\"Zip Code\" className={classes.addressField} value={values.checkoutDetails.delivery_address.zipcode} onChange={handleAddressChange('zipcode')} margin=\"normal\"/>\n        <TextField id=\"country\" label=\"Country\" className={classes.addressField} value={values.checkoutDetails.delivery_address.country} onChange={handleAddressChange('country')} margin=\"normal\"/>\n        <br/> {\n            values.error && (<Typography component=\"p\" color=\"error\">\n                <Icon color=\"error\" className={classes.error}>error</Icon>\n                {values.error}</Typography>)\n          }\n        <div>\n            <PlaceOrder checkoutDetails={values.checkoutDetails} />\n        </div>\n      </Card>)\n}","D:\\code\\Du_an\\frontend\\src\\components\\cart\\AddToCart.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\cart\\CartItems.js",["254","255"],"import React, {useState} from 'react'\nimport auth from './../auth/auth-helper'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport PropTypes from 'prop-types'\nimport {makeStyles} from '@material-ui/core/styles'\nimport cart from './cart-helper.js'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: '24px 0px',\n    padding: '16px 40px 60px 40px',\n    backgroundColor: '#80808017'\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.openTitle,\n    fontSize: '1.2em'\n  },\n  price: {\n    color: theme.palette.text.secondary,\n    display: 'inline'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginTop: 0,\n    width: 50\n  },\n  productTitle: {\n    fontSize: '1.15em',\n    marginBottom: '5px'\n  },\n  subheading: {\n    color: 'rgba(88, 114, 128, 0.67)',\n    padding: '8px 10px 0',\n    cursor: 'pointer',\n    display: 'inline-block'\n  },\n  cart: {\n    width: '100%',\n    display: 'inline-flex'\n  },\n  details: {\n    display: 'inline-block',\n    width: \"100%\",\n    padding: \"4px\"\n  },\n  content: {\n    flex: '1 0 auto',\n    padding: '16px 8px 0px'\n  },\n  cover: {\n    width: 160,\n    height: 125,\n    margin: '8px'\n  },\n  itemTotal: {\n    float: 'right',\n    marginRight: '40px',\n    fontSize: '1.5em',\n    color: 'rgb(72, 175, 148)'\n  },\n  checkout: {\n    float: 'right',\n    margin: '24px'\n  },\n  total: {\n    fontSize: '1.2em',\n    color: 'rgb(53, 97, 85)',\n    marginRight: '16px',\n    fontWeight: '600',\n    verticalAlign: 'bottom'\n  },\n  continueBtn: {\n    marginLeft: '10px'\n  },\n  itemShop: {\n    display: 'block',\n    fontSize: '0.90em',\n    color: '#78948f'\n  },\n  removeButton: {\n    fontSize: '0.8em'\n  }\n}))\n\nexport default function CartItems (props) {\n  const classes = useStyles()\n  const [cartItems, setCartItems] = useState(cart.getCart())\n\n  const handleChange = index => event => {\n    let updatedCartItems = cartItems\n    if(event.target.value == 0){\n      updatedCartItems[index].quantity = 1\n    }else{\n      updatedCartItems[index].quantity = event.target.value\n    }\n    setCartItems([...updatedCartItems])\n    cart.updateCart(index, event.target.value)\n  }\n\n  const getTotal = () => {\n    return cartItems.reduce((a, b) => {\n        return a + (b.quantity*b.product.price)\n    }, 0)\n  }\n\n  const removeItem = index => event =>{\n    let updatedCartItems = cart.removeItem(index)\n    if(updatedCartItems.length == 0){\n      props.setCheckout(false)\n    }\n    setCartItems(updatedCartItems)\n  }\n\n  const openCheckout = () => {\n    props.setCheckout(true)\n  }\n\n    return (<Card className={classes.card}>\n      <Typography type=\"title\" className={classes.title}>\n        Shopping Cart\n      </Typography>\n      {cartItems.length>0 ? (<span>\n          {cartItems.map((item, i) => {\n            return <span key={i}><Card className={classes.cart}>\n              <CardMedia\n                className={classes.cover}\n                image={'/api/product/image/'+item.product._id}\n                title={item.product.name}\n              />\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <Link to={'/product/'+item.product._id}><Typography type=\"title\" component=\"h3\" className={classes.productTitle} color=\"primary\">{item.product.name}</Typography></Link>\n                  <div>\n                    <Typography type=\"subheading\" component=\"h3\" className={classes.price} color=\"primary\">$ {item.product.price}</Typography>\n                    <span className={classes.itemTotal}>${item.product.price * item.quantity}</span>\n                    <span className={classes.itemShop}>Shop: {item.product.shop.name}</span>\n                  </div>\n                </CardContent>\n                <div className={classes.subheading}>\n                  Quantity: <TextField\n                              value={item.quantity}\n                              onChange={handleChange(i)}\n                              type=\"number\"\n                              inputProps={{\n                                  min:1\n                              }}\n                              className={classes.textField}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              margin=\"normal\"/>\n                            <Button className={classes.removeButton} color=\"primary\" onClick={removeItem(i)}>x Remove</Button>\n                </div>\n              </div>\n            </Card>\n            <Divider/>\n          </span>})\n        }\n        <div className={classes.checkout}>\n          <span className={classes.total}>Total: ${getTotal()}</span>\n          {!props.checkout && (auth.isAuthenticated()?\n            <Button color=\"secondary\" variant=\"contained\" onClick={openCheckout}>Checkout</Button>\n            :\n            <Link to=\"/signin\">\n              <Button color=\"primary\" variant=\"contained\">Sign in to checkout</Button>\n            </Link>)}\n          <Link to='/' className={classes.continueBtn}>\n            <Button variant=\"contained\">Continue Shopping</Button>\n          </Link>\n        </div>\n      </span>) :\n      <Typography variant=\"subtitle1\" component=\"h3\" color=\"primary\">No items added to your cart.</Typography>\n    }\n    </Card>)\n}\n\nCartItems.propTypes = {\n  checkout: PropTypes.bool.isRequired,\n  setCheckout: PropTypes.func.isRequired\n}\n","D:\\code\\Du_an\\frontend\\src\\components\\product\\Products.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\shop\\api-shop.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\shop\\DeleteShop.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\product\\MyProducts.js",["256"],"import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport Edit from '@material-ui/icons/Edit'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Typography from '@material-ui/core/Typography'\nimport {Link} from 'react-router-dom'\nimport Divider from '@material-ui/core/Divider'\nimport {listByShop} from './../product/api-product.js'\nimport DeleteProduct from './../product/DeleteProduct'\n\nconst useStyles = makeStyles(theme => ({\n  products: {\n    padding: '24px'\n  },\n  addButton:{\n    float:'right'\n  },\n  leftIcon: {\n    marginRight: \"8px\"\n  },\n  title: {\n    margin: theme.spacing(2),\n    color: theme.palette.protectedTitle,\n    fontSize: '1.2em'\n  },\n  subheading: {\n    marginTop: theme.spacing(2),\n    color: theme.palette.openTitle\n  },\n  cover: {\n    width: 110,\n    height: 100,\n    margin: '8px'\n  },\n  details: {\n    padding: '10px'\n  },\n}))\n\nexport default function MyProducts (props){\n  const classes = useStyles()\n  const [products, setProducts] = useState([])\n  \n  useEffect(() => {\n    const abortController = new AbortController()\n    const signal = abortController.signal\n\n    listByShop({\n      shopId: props.shopId\n    }, signal).then((data)=>{\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        setProducts(data)\n      }\n    })\n    return function cleanup(){\n      abortController.abort()\n    }\n  }, [])\n\n  const removeProduct = (product) => {\n    const updatedProducts = [...products]\n    const index = updatedProducts.indexOf(product)\n    updatedProducts.splice(index, 1)\n    setProducts(updatedProducts)\n  }\n\n    return (\n      <Card className={classes.products}>\n        <Typography type=\"title\" className={classes.title}>\n          Products\n          <span className={classes.addButton}>\n            <Link to={\"/seller/\"+props.shopId+\"/products/new\"}>\n              <Button color=\"primary\" variant=\"contained\">\n                <Icon className={classes.leftIcon}>add_box</Icon>  New Product\n              </Button>\n            </Link>\n          </span>\n        </Typography>\n        <List dense>\n        {products.map((product, i) => {\n            return <span key={i}>\n              <ListItem>\n                <CardMedia\n                  className={classes.cover}\n                  image={'/api/product/image/'+product._id+\"?\" + new Date().getTime()}\n                  title={product.name}\n                />\n                <div className={classes.details}>\n                  <Typography type=\"headline\" component=\"h2\" color=\"primary\" className={classes.productTitle}>\n                    {product.name}\n                  </Typography>\n                  <Typography type=\"subheading\" component=\"h4\" className={classes.subheading}>\n                    Quantity: {product.quantity} | Price: ${product.price}\n                  </Typography>\n                </div>\n                <ListItemSecondaryAction>\n                  <Link to={\"/seller/\"+product.shop._id+\"/\"+product._id+\"/edit\"}>\n                    <IconButton aria-label=\"Edit\" color=\"primary\">\n                      <Edit/>\n                    </IconButton>\n                  </Link>\n                  <DeleteProduct\n                    product={product}\n                    shopId={props.shopId}\n                    onRemove={removeProduct}/>\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider/></span>})}\n        </List>\n      </Card>)\n}\nMyProducts.propTypes = {\n  shopId: PropTypes.string.isRequired\n}\n\n","D:\\code\\Du_an\\frontend\\src\\components\\order\\MyOrders.js",["257","258"],"D:\\code\\Du_an\\frontend\\src\\components\\user\\DeleteUser.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\cart\\PlaceOrder.js",[],"D:\\code\\Du_an\\frontend\\src\\components\\product\\DeleteProduct.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\auth.js",[],"D:\\code\\Du_an\\frontend\\src\\redux\\index.js",[],"D:\\code\\Du_an\\frontend\\src\\saga\\index.js",[],"D:\\code\\Du_an\\frontend\\src\\saga\\auth.js",["259"],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":8,"column":8,"nodeType":"266","messageId":"267","endLine":8,"endColumn":12},{"ruleId":"268","severity":1,"message":"269","line":17,"column":33,"nodeType":"270","messageId":"271","endLine":17,"endColumn":35},{"ruleId":"264","severity":1,"message":"272","line":20,"column":7,"nodeType":"266","messageId":"267","endLine":20,"endColumn":19},{"ruleId":"264","severity":1,"message":"273","line":19,"column":27,"nodeType":"266","messageId":"267","endLine":19,"endColumn":45},{"ruleId":"274","severity":1,"message":"275","line":74,"column":6,"nodeType":"276","endLine":74,"endColumn":27,"suggestions":"277"},{"ruleId":"274","severity":1,"message":"278","line":62,"column":6,"nodeType":"276","endLine":62,"endColumn":8,"suggestions":"279"},{"ruleId":"274","severity":1,"message":"280","line":67,"column":6,"nodeType":"276","endLine":67,"endColumn":27,"suggestions":"281"},{"ruleId":"268","severity":1,"message":"269","line":85,"column":34,"nodeType":"270","messageId":"271","endLine":85,"endColumn":36},{"ruleId":"264","severity":1,"message":"282","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"283","line":13,"column":9,"nodeType":"266","messageId":"267","endLine":13,"endColumn":19},{"ruleId":"274","severity":1,"message":"284","line":85,"column":6,"nodeType":"276","endLine":85,"endColumn":8,"suggestions":"285"},{"ruleId":"264","severity":1,"message":"286","line":47,"column":10,"nodeType":"266","messageId":"267","endLine":47,"endColumn":15},{"ruleId":"274","severity":1,"message":"287","line":62,"column":6,"nodeType":"276","endLine":62,"endColumn":8,"suggestions":"288"},{"ruleId":"268","severity":1,"message":"269","line":95,"column":82,"nodeType":"270","messageId":"271","endLine":95,"endColumn":84},{"ruleId":"274","severity":1,"message":"289","line":87,"column":6,"nodeType":"276","endLine":87,"endColumn":8,"suggestions":"290"},{"ruleId":"264","severity":1,"message":"291","line":1,"column":26,"nodeType":"266","messageId":"267","endLine":1,"endColumn":35},{"ruleId":"264","severity":1,"message":"286","line":67,"column":10,"nodeType":"266","messageId":"267","endLine":67,"endColumn":15},{"ruleId":"264","severity":1,"message":"292","line":105,"column":11,"nodeType":"266","messageId":"267","endLine":105,"endColumn":17},{"ruleId":"274","severity":1,"message":"293","line":118,"column":6,"nodeType":"276","endLine":118,"endColumn":8,"suggestions":"294"},{"ruleId":"268","severity":1,"message":"269","line":122,"column":34,"nodeType":"270","messageId":"271","endLine":122,"endColumn":36},{"ruleId":"268","severity":1,"message":"269","line":152,"column":93,"nodeType":"270","messageId":"271","endLine":152,"endColumn":95},{"ruleId":"274","severity":1,"message":"295","line":61,"column":8,"nodeType":"276","endLine":61,"endColumn":10,"suggestions":"296"},{"ruleId":"268","severity":1,"message":"269","line":84,"column":23,"nodeType":"270","messageId":"271","endLine":84,"endColumn":25},{"ruleId":"268","severity":1,"message":"269","line":86,"column":49,"nodeType":"270","messageId":"271","endLine":86,"endColumn":51},{"ruleId":"268","severity":1,"message":"269","line":71,"column":22,"nodeType":"270","messageId":"271","endLine":71,"endColumn":24},{"ruleId":"264","severity":1,"message":"292","line":62,"column":11,"nodeType":"266","messageId":"267","endLine":62,"endColumn":17},{"ruleId":"274","severity":1,"message":"297","line":76,"column":6,"nodeType":"276","endLine":76,"endColumn":8,"suggestions":"298"},{"ruleId":"268","severity":1,"message":"269","line":100,"column":119,"nodeType":"270","messageId":"271","endLine":100,"endColumn":121},{"ruleId":"268","severity":1,"message":"269","line":101,"column":130,"nodeType":"270","messageId":"271","endLine":101,"endColumn":132},{"ruleId":"274","severity":1,"message":"299","line":64,"column":6,"nodeType":"276","endLine":64,"endColumn":8,"suggestions":"300"},{"ruleId":"268","severity":1,"message":"269","line":71,"column":28,"nodeType":"270","messageId":"271","endLine":71,"endColumn":30},{"ruleId":"268","severity":1,"message":"269","line":96,"column":35,"nodeType":"270","messageId":"271","endLine":96,"endColumn":37},{"ruleId":"268","severity":1,"message":"269","line":155,"column":31,"nodeType":"270","messageId":"271","endLine":155,"endColumn":33},{"ruleId":"301","severity":1,"message":"302","line":159,"column":37,"nodeType":"303","endLine":159,"endColumn":116},{"ruleId":"264","severity":1,"message":"291","line":1,"column":26,"nodeType":"266","messageId":"267","endLine":1,"endColumn":35},{"ruleId":"268","severity":1,"message":"269","line":100,"column":27,"nodeType":"270","messageId":"271","endLine":100,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":117,"column":32,"nodeType":"270","messageId":"271","endLine":117,"endColumn":34},{"ruleId":"274","severity":1,"message":"304","line":68,"column":6,"nodeType":"276","endLine":68,"endColumn":8,"suggestions":"305"},{"ruleId":"264","severity":1,"message":"292","line":33,"column":11,"nodeType":"266","messageId":"267","endLine":33,"endColumn":17},{"ruleId":"274","severity":1,"message":"306","line":46,"column":6,"nodeType":"276","endLine":46,"endColumn":8,"suggestions":"307"},{"ruleId":"264","severity":1,"message":"308","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":13},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isPartActive' is assigned a value but never used.","'setSuggestionTitle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'jwt.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["311"],"React Hook useEffect has missing dependencies: 'jwt.token', 'jwt.user._id', 'props.location.search', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["312"],"React Hook useEffect has a missing dependency: 'jwt.token'. Either include it or remove the dependency array.",["313"],"'Component' is defined but never used.","'withStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'match.params.productId' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["314"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'jwt.token' and 'jwt.user._id'. Either include them or remove the dependency array.",["315"],"React Hook useEffect has missing dependencies: 'match.params.shopId' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["316"],"'useEffect' is defined but never used.","'signal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.orderId'. Either include it or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'jwt.token' and 'match.params.shopId'. Either include them or remove the dependency array.",["318"],"React Hook useEffect has a missing dependency: 'props.categories'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["320"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.shopId'. Either include it or remove the dependency array.",["321"],"React Hook useEffect has missing dependencies: 'jwt.token' and 'jwt?.user?._id'. Either include them or remove the dependency array.",["322"],"'all' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},"Update the dependencies array to be: [jwt.token, match.params.userId, values]",{"range":"347","text":"348"},"Update the dependencies array to be: [jwt.token, jwt.user._id, props.location.search, values]",{"range":"349","text":"350"},"Update the dependencies array to be: [jwt.token, match.params.userId]",{"range":"351","text":"352"},"Update the dependencies array to be: [match.params.productId, values]",{"range":"353","text":"354"},"Update the dependencies array to be: [jwt.token, jwt.user._id]",{"range":"355","text":"356"},"Update the dependencies array to be: [match.params.shopId, values]",{"range":"357","text":"358"},"Update the dependencies array to be: [match.params.orderId]",{"range":"359","text":"360"},"Update the dependencies array to be: [jwt.token, match.params.shopId]",{"range":"361","text":"362"},"Update the dependencies array to be: [props.categories]",{"range":"363","text":"364"},"Update the dependencies array to be: [values]",{"range":"365","text":"366"},"Update the dependencies array to be: [props.shopId]",{"range":"367","text":"368"},"Update the dependencies array to be: [jwt.token, jwt?.user?._id]",{"range":"369","text":"370"},[2041,2062],"[jwt.token, match.params.userId, values]",[1799,1801],"[jwt.token, jwt.user._id, props.location.search, values]",[2056,2077],"[jwt.token, match.params.userId]",[2325,2327],"[match.params.productId, values]",[1966,1968],"[jwt.token, jwt.user._id]",[2259,2261],"[match.params.shopId, values]",[2683,2685],"[match.params.orderId]",[1859,1861],"[jwt.token, match.params.shopId]",[1931,1933],"[props.categories]",[1742,1744],"[values]",[1802,1804],"[props.shopId]",[1355,1357],"[jwt.token, jwt?.user?._id]"]